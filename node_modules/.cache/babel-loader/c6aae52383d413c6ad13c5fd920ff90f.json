{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/Auth/LoginForm.js\";\nimport React, { Component } from \"react\";\nimport styles from './LoginForm.module.scss';\nimport { Button, Col, Form, Row } from \"reactstrap\";\nimport Aux from \"../../hoc/Auxwrap\";\nimport Carousel from '../Carousel/Carousel';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { BrowserView, MobileView } from \"react-device-detect\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\nimport InputField from \"../../components/Common/Input/Input\";\nimport ButtonField from \"../../components/Common/Button/Button\";\nimport { checkValidity } from \"../../shared/utility\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      formIsValid: false,\n      controls: {\n        email: {\n          elementType: \"input\",\n          elementConfig: {\n            name: \"email\",\n            type: \"email\",\n            placeholder: \"Username\"\n          },\n          value: \"\",\n          validation: {\n            required: true,\n            isEmail: true\n          },\n          valid: false,\n          touched: false,\n          errorMessage: \"\"\n        },\n        password: {\n          elementType: \"input\",\n          elementConfig: {\n            name: \"pwd\",\n            type: \"password\",\n            placeholder: \"Password\"\n          },\n          value: \"\",\n          validation: {\n            required: true\n            /* minLength: 6*/\n\n          },\n          valid: false,\n          touched: false,\n          errorMessage: \"\"\n        },\n        userType: {\n          elementType: \"input\",\n          elementConfig: {\n            name: \"userType\",\n            type: \"hidden\"\n          },\n          value: \"1\",\n          validation: {\n            required: false\n          },\n          valid: true,\n          touched: true,\n          errorMessage: \"\"\n        },\n        remember: {\n          elementType: \"checkbox\",\n          elementConfig: {\n            name: \"rememberMe\",\n            type: \"checkbox\",\n            label: \"Remember Me\",\n            checked: true\n          },\n          value: \"\",\n          valid: true,\n          touched: false\n        }\n      },\n      isSignup: true,\n      isFormValid: false,\n      enableSubmit: false\n    };\n\n    this.inputBluredHandler = (event, controlName) => {\n      let checkValid = checkValidity(event.target.value, this.state.controls[controlName].validation);\n      const updatedControls = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName],\n          valid: checkValid.isValid,\n          errorMessage: checkValid.error,\n          touched: true\n        }\n      };\n      let formIsValid = true;\n\n      for (let inputIdentifier in updatedControls) {\n        formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\n      }\n\n      this.setState({\n        controls: updatedControls,\n        formIsValid: formIsValid\n      });\n    };\n\n    this.inputChangedHandler = (event, controlName) => {\n      const updatedControls = { ...this.state.controls,\n        [controlName]: { ...this.state.controls[controlName],\n          value: event.target.value\n        }\n      };\n      let pwdHasValue = false;\n\n      if (controlName === 'password' && event.target.value !== '') {\n        pwdHasValue = true;\n      }\n\n      this.setState({\n        controls: updatedControls,\n        enableSubmit: pwdHasValue\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n\n      if (this.state.formIsValid) {\n        this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.controls.userType.value, this.state.isSignup);\n      }\n    };\n  }\n\n  componentDidMount() {\n    {\n      /* if (this.props.authRedirectPath !== '/') {\r\n      \n      this.props.onSetAuthRedirectPath(this.props.authRedirectPath);\r\n      \n      }*/\n    }\n  }\n\n  render() {\n    const formElementsArray = [];\n\n    for (let key in this.state.controls) {\n      formElementsArray.push({\n        id: key,\n        config: this.state.controls[key]\n      });\n    }\n\n    let form = formElementsArray.map(formElement => /*#__PURE__*/React.createElement(Row, {\n      key: formElement.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(InputField, {\n      elementType: formElement.config.elementType,\n      elementConfig: formElement.config.elementConfig,\n      value: formElement.config.value,\n      invalid: !formElement.config.valid,\n      shouldValidate: formElement.config.validation,\n      touched: formElement.config.touched,\n      errorMessage: formElement.config.errorMessage,\n      changed: event => this.inputChangedHandler(event, formElement.id),\n      blured: event => this.inputBluredHandler(event, formElement.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }\n    }))));\n    let errorMessage = null;\n\n    if (this.props.error) {\n      errorMessage = /*#__PURE__*/React.createElement(\"p\", {\n        className: \"text-danger mt-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 9\n        }\n      }, this.props.error);\n    }\n\n    if (this.props.isAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: this.props.authRedirectPath,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BrowserView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Carousel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"keyFeatures\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"* Flexibility in Booking and Scheduling Appointments Via Calendar \"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, \"* 10,000 Doctors, 30,000 Lab Facilities and 8,000  Associated Clinics  \"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, \"* Store & Access Electronic Prescriptions and Lab Reports \"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }, \"* Get Reminder via SMS and Mail \"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, \"* Make Easy and Secure Online Payment\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }\n    }, \"* Trusted by 50,000 Customers\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, \"* 24x7 Expert Support\"), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, \"* Home Clinic Services\"))))), /*#__PURE__*/React.createElement(Col, {\n      sm: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bgWhite\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'welcomeMsg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 13\n      }\n    }, \"Welcome to ConferKare\"), /*#__PURE__*/React.createElement(Form, {\n      className: \"form\",\n      noValidate: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 13\n      }\n    }, form, /*#__PURE__*/React.createElement(ButtonField, {\n      color: \"primary\",\n      className: 'submitBtn',\n      btnType: \"customButton\",\n      clicked: this.submitHandler,\n      disabled: !this.state.enableSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 15\n      }\n    }, \"Sign In\"), errorMessage), /*#__PURE__*/React.createElement(BrowserView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      id: \"signUp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/createuser\",\n      className: \"textDn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 30\n      }\n    }, \"New User, Sign Up \")))), /*#__PURE__*/React.createElement(MobileView, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"globalLinks-mob\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/createuser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, \"Sign Up\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, \"Privacy\")), /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"#\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 21\n      }\n    }, \"Contact us\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    authRedirectPath: state.auth.authRedirectPath\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, userType, isSignup) => dispatch(actions.auth(email, password, userType, isSignup)),\n    onSetAuthRedirectPath: authRedirectPath => dispatch(actions.setAuthRedirectPath(authRedirectPath))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/Auth/LoginForm.js"],"names":["React","Component","styles","Button","Col","Form","Row","Aux","Carousel","Link","Redirect","BrowserView","MobileView","connect","actions","InputField","ButtonField","checkValidity","LoginForm","state","formIsValid","controls","email","elementType","elementConfig","name","type","placeholder","value","validation","required","isEmail","valid","touched","errorMessage","password","userType","remember","label","checked","isSignup","isFormValid","enableSubmit","inputBluredHandler","event","controlName","checkValid","target","updatedControls","isValid","error","inputIdentifier","setState","inputChangedHandler","pwdHasValue","submitHandler","preventDefault","props","onAuth","componentDidMount","render","formElementsArray","key","push","id","config","form","map","formElement","isAuthenticated","authRedirectPath","mapStateToProps","loading","auth","token","mapDispatchToProps","dispatch","onSetAuthRedirectPath","setAuthRedirectPath"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport styles from './LoginForm.module.scss';\r\nimport {Button, Col, Form, Row} from \"reactstrap\";\r\nimport Aux from \"../../hoc/Auxwrap\";\r\nimport Carousel from '../Carousel/Carousel';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {BrowserView, MobileView} from \"react-device-detect\";\r\nimport {connect} from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport InputField from \"../../components/Common/Input/Input\";\r\nimport ButtonField from \"../../components/Common/Button/Button\";\r\nimport {checkValidity} from \"../../shared/utility\";\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    formIsValid: false,\r\n    controls: {\r\n      email: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"email\",\r\n          type: \"email\",\r\n          placeholder: \"Username\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          isEmail: true\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        errorMessage: \"\"\r\n      },\r\n      password: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"pwd\",\r\n          type: \"password\",\r\n          placeholder: \"Password\"\r\n        },\r\n        value: \"\",\r\n        validation: {\r\n          required: true,\r\n          /* minLength: 6*/\r\n        },\r\n        valid: false,\r\n        touched: false,\r\n        errorMessage: \"\"\r\n      },\r\n      userType: {\r\n        elementType: \"input\",\r\n        elementConfig: {\r\n          name: \"userType\",\r\n          type: \"hidden\"\r\n        },\r\n        value: \"1\",\r\n        validation: {\r\n          required: false\r\n        },\r\n        valid: true,\r\n        touched: true,\r\n        errorMessage: \"\"\r\n      },\r\n      remember: {\r\n        elementType: \"checkbox\",\r\n        elementConfig: {\r\n          name: \"rememberMe\",\r\n          type: \"checkbox\",\r\n          label: \"Remember Me\",\r\n          checked: true\r\n        },\r\n        value: \"\",\r\n        valid: true,\r\n        touched: false\r\n      }\r\n    },\r\n    isSignup: true,\r\n    isFormValid: false,\r\n    enableSubmit: false\r\n  };\r\n  \r\n  componentDidMount() {\r\n    \r\n    {\r\n      /* if (this.props.authRedirectPath !== '/') {\r\n     \r\n     this.props.onSetAuthRedirectPath(this.props.authRedirectPath);\r\n     \r\n     }*/\r\n    }\r\n    \r\n  }\r\n  \r\n  inputBluredHandler = (event, controlName) => {\r\n    let checkValid = checkValidity(\r\n      event.target.value,\r\n      this.state.controls[controlName].validation\r\n    );\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        valid: checkValid.isValid,\r\n        errorMessage: checkValid.error,\r\n        touched: true\r\n      }\r\n    };\r\n    let formIsValid = true;\r\n    for (let inputIdentifier in updatedControls) {\r\n      formIsValid = updatedControls[inputIdentifier].valid && formIsValid;\r\n    }\r\n    this.setState({controls: updatedControls, formIsValid: formIsValid});\r\n  };\r\n  inputChangedHandler = (event, controlName) => {\r\n    const updatedControls = {\r\n      ...this.state.controls,\r\n      [controlName]: {\r\n        ...this.state.controls[controlName],\r\n        value: event.target.value\r\n      }\r\n    };\r\n    let pwdHasValue = false;\r\n    if (controlName === 'password' && event.target.value !== '') {\r\n      pwdHasValue = true;\r\n    }\r\n    this.setState({controls: updatedControls, enableSubmit: pwdHasValue});\r\n  };\r\n  submitHandler = event => {\r\n    event.preventDefault();\r\n    if (this.state.formIsValid) {\r\n      this.props.onAuth(\r\n        this.state.controls.email.value,\r\n        this.state.controls.password.value,\r\n        this.state.controls.userType.value,\r\n        this.state.isSignup\r\n      );\r\n    }\r\n  };\r\n  \r\n  render() {\r\n    \r\n    const formElementsArray = [];\r\n    for (let key in this.state.controls) {\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: this.state.controls[key]\r\n      });\r\n    }\r\n    let form = formElementsArray.map(formElement => (\r\n      <Row key={formElement.id}>\r\n        <Col>\r\n          <InputField\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value}\r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            errorMessage={formElement.config.errorMessage}\r\n            changed={event => this.inputChangedHandler(event, formElement.id)}\r\n            blured={event => this.inputBluredHandler(event, formElement.id)}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    ));\r\n    let errorMessage = null;\r\n    if (this.props.error) {\r\n      errorMessage = (\r\n        <p className=\"text-danger mt-2\">{this.props.error}</p>\r\n      );\r\n    }\r\n    if (this.props.isAuthenticated) {\r\n      return <Redirect to={this.props.authRedirectPath}/>;\r\n    }\r\n    return (\r\n      <Aux>\r\n        <Col sm=\"8\">\r\n          <BrowserView>\r\n            <Carousel/>\r\n            <div className=\"keyFeatures\">\r\n              <ul>\r\n                <li>* Flexibility in Booking and Scheduling Appointments Via Calendar </li>\r\n                <li>* 10,000 Doctors, 30,000 Lab Facilities and 8,000  Associated Clinics  </li>\r\n                <li>* Store & Access Electronic Prescriptions and Lab Reports </li>\r\n                <li>* Get Reminder via SMS and Mail </li>\r\n                <li>* Make Easy and Secure Online Payment</li>\r\n                <li>* Trusted by 50,000 Customers</li>\r\n                <li>* 24x7 Expert Support</li>\r\n                <li>* Home Clinic Services</li>\r\n              </ul>\r\n            </div>\r\n          </BrowserView>\r\n        </Col>\r\n        <Col sm=\"4\">\r\n          <div className=\"bgWhite\">\r\n            <div className={'welcomeMsg'}>Welcome to ConferKare</div>\r\n            <Form className=\"form\" noValidate>\r\n              {form}\r\n              <ButtonField color=\"primary\" className={'submitBtn'} btnType=\"customButton\" clicked={this.submitHandler} disabled={!this.state.enableSubmit}>Sign In</ButtonField>\r\n              {errorMessage}\r\n            </Form>\r\n            {/*<p id=\"forgotPWD\"><a href=\"#\" className=\"textDn\">Forgot username/password </a></p>*/}\r\n            <BrowserView>\r\n              <p id=\"signUp\"><Link to=\"/createuser\" className=\"textDn\">New User, Sign Up </Link></p>\r\n            </BrowserView>\r\n          </div>\r\n          <MobileView>\r\n            <div className=\"globalLinks-mob\">\r\n              <ul>\r\n                <li><Link to=\"/createuser\">Sign Up</Link></li>\r\n                <li><Link to=\"#\">Privacy</Link></li>\r\n                <li><Link to=\"#\">Contact us</Link></li>\r\n              </ul>\r\n            </div>\r\n          </MobileView>\r\n        </Col>\r\n      </Aux>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loading: state.auth.loading,\r\n    error: state.auth.error,\r\n    isAuthenticated: state.auth.token !== null,\r\n    authRedirectPath: state.auth.authRedirectPath\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onAuth: (email, password, userType, isSignup) => dispatch(actions.auth(email, password, userType, isSignup)),\r\n    onSetAuthRedirectPath: (authRedirectPath) => dispatch(actions.setAuthRedirectPath(authRedirectPath))\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm);\r\n"]},"metadata":{},"sourceType":"module"}