{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/SelectSlot/SelectSlot.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport getPageLink from \"../../components/Common/WizardButtons/StageManager\";\nimport { Col, Row } from \"reactstrap\";\nimport { Helmet } from \"react-helmet\";\nimport styles from './SelectSlot.scss';\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\nimport WizardButtons from \"../../components/Common/WizardButtons/WizardButtons\";\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\n\nclass SelectSlot extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generateSlots = slotList => {\n      let slotListing = slotList.map(slot => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: slot.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 11\n          }\n        }, slot.id), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 11\n          }\n        }, slot.startTime), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, slot.period), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 11\n          }\n        }, slot.waitingTime), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 11\n          }\n        }, slot.status), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(Link, {\n          onClick: null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }, \"Select\")));\n      });\n      return slotListing;\n    };\n\n    this.handlerNextBtnClick = () => {\n      this.state.appointmentData.slotId = this.state.slotId;\n      this.props.onSetAppointmentData(this.state.appointmentData);\n    };\n\n    this.state = {\n      slotId: null\n    };\n    this.handlerNextBtnClick.bind(this);\n  }\n\n  componentDidMount() {\n    let {\n      phyId,\n      clinicId,\n      appointmentDate\n    } = this.props.appointmentData;\n    this.props.onGetSlots(phyId, clinicId, appointmentDate);\n  }\n\n  render() {\n    if (this.props.userProfile.success === 0) {\n      sessionStorage.setItem('conferkare.appointment.activeStage', 0);\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 14\n        }\n      });\n    } // Slots listing table\n\n\n    const pageUrl = getPageLink();\n    return /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"mt10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: pageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, '.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} ')), this.props.profileCompliant === false && /*#__PURE__*/React.createElement(UserProfile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, \"Select Slot\"), /*#__PURE__*/React.createElement(Breadcrumb, {\n      activeStep: '4',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'slotBox',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, \"Select the appointment slot\", /*#__PURE__*/React.createElement(WizardButtons, {\n      nextBtnCallback: this.handlerNextBtnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, '.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} .header .logo img{height:80px} ')), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      key: 'allSlots',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"react-tips\",\n      value: 'all',\n      defaultChecked: true // onClick={this.handleAppointmentTypeChange}\n      ,\n      className: \"form-check-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }\n    }), \"All\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      key: 'morningSlots',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"react-tips\",\n      value: 'morning' // onClick={this.handleAppointmentTypeChange}\n      ,\n      className: \"form-check-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 29\n      }\n    }), \"Morning\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      key: 'eveningSlots',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"react-tips\",\n      value: 'evening' // onClick={this.handleAppointmentTypeChange}\n      ,\n      className: \"form-check-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 29\n      }\n    }), \"Evening\")))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      className: 'slotsListingContainer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"li\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 29\n      }\n    }, \"S. No.\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, \"Slot time\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"Morning/Evening\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \"Wait time\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 29\n      }\n    }, \"Status\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 29\n      }\n    }, \"\\xA0\")), slotListing)))))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ImgWithOverlayTextGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\n    appointmentData: state.newAppointment.appointmentData,\n    slots: state.selectSlot.slots\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetSlots: (phyId, clinicId, slotDate) => dispatch(actions.getSlots(phyId, clinicId, slotDate)),\n    onSetAppointmentData: appointmentData => dispatch(actions.setAppointmentData(appointmentData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSlot);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/SelectSlot/SelectSlot.js"],"names":["React","Component","connect","actions","Link","Redirect","getPageLink","Col","Row","Helmet","styles","UserProfile","Breadcrumb","WizardButtons","ImgWithOverlayTextGroup","SelectSlot","constructor","props","generateSlots","slotList","slotListing","map","slot","id","startTime","period","waitingTime","status","handlerNextBtnClick","state","appointmentData","slotId","onSetAppointmentData","bind","componentDidMount","phyId","clinicId","appointmentDate","onGetSlots","render","userProfile","success","sessionStorage","setItem","pageUrl","profileCompliant","mapStateToProps","dateofbirth","newAppointment","slots","selectSlot","mapDispatchToProps","dispatch","slotDate","getSlots","setAppointmentData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport {Link, Redirect} from \"react-router-dom\";\nimport getPageLink from \"../../components/Common/WizardButtons/StageManager\";\nimport {Col, Row} from \"reactstrap\";\nimport {Helmet} from \"react-helmet\";\nimport styles from './SelectSlot.scss';\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\nimport WizardButtons from \"../../components/Common/WizardButtons/WizardButtons\";\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\n\nclass SelectSlot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slotId: null\n    };\n    this.handlerNextBtnClick.bind(this);\n  }\n  \n  componentDidMount() {\n    let {phyId, clinicId, appointmentDate} = this.props.appointmentData;\n    this.props.onGetSlots(phyId, clinicId, appointmentDate);\n  }\n\n  generateSlots = (slotList) => {\n    let slotListing = slotList.map((slot) => {\n      return (\n        <li key={slot.id}>\n          <span>{slot.id}</span>\n          <span>{slot.startTime}</span>\n          <span>{slot.period}</span>\n          <span>{slot.waitingTime}</span>\n          <span>{slot.status}</span>\n          <span><Link onClick={null}>Select</Link></span>\n        </li>\n      );\n    });\n    return slotListing;\n  };\n  \n  handlerNextBtnClick = () => {\n    this.state.appointmentData.slotId = this.state.slotId;\n    this.props.onSetAppointmentData(this.state.appointmentData);\n  };\n  \n\n  render() {\n    if (this.props.userProfile.success === 0) {\n      sessionStorage.setItem('conferkare.appointment.activeStage', 0);\n      return <Redirect to='/'/>;\n    }\n    // Slots listing table\n    \n    const pageUrl = getPageLink();\n    return (\n      <Col md=\"12\" className=\"mt10\">\n        <Redirect to={pageUrl}/>\n        <Helmet>\n          <style>{'.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} '}</style>\n        </Helmet>\n        { this.props.profileCompliant === false &&\n          <UserProfile/>\n        }\n        <Row>\n          <Col md=\"8\">\n            <div>\n              <h2>Select Slot</h2>\n              <Breadcrumb activeStep={'4'} />\n            </div>\n            <Row>\n              <Col>\n                <div className={'slotBox'}>\n                  <h4>\n                    Select the appointment slot\n                    <WizardButtons nextBtnCallback={this.handlerNextBtnClick} />\n                  </h4>\n                  <Helmet>\n                    <style>{'.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} .header .logo img{height:80px} '}</style>\n                  </Helmet>\n                  <div>\n                    <Row>\n                      <Col>\n                        <div className=\"form-check\" key={'allSlots'}>\n                          <label>\n                            <input\n                              type=\"radio\"\n                              name=\"react-tips\"\n                              value={'all'}\n                              defaultChecked={true}\n                              // onClick={this.handleAppointmentTypeChange}\n                              className=\"form-check-input\"\n                            />\n                            All\n                          </label>\n                        </div>\n                        <div className=\"form-check\" key={'morningSlots'}>\n                          <label>\n                            <input\n                              type=\"radio\"\n                              name=\"react-tips\"\n                              value={'morning'}\n                              // onClick={this.handleAppointmentTypeChange}\n                              className=\"form-check-input\"\n                            />\n                            Morning\n                          </label>\n                        </div>\n                        <div className=\"form-check\" key={'eveningSlots'}>\n                          <label>\n                            <input\n                              type=\"radio\"\n                              name=\"react-tips\"\n                              value={'evening'}\n                              // onClick={this.handleAppointmentTypeChange}\n                              className=\"form-check-input\"\n                            />\n                            Evening\n                          </label>\n                        </div>\n                      </Col>\n                    </Row><br/>\n                    <Row>\n                      <Col>\n                        <ul className={'slotsListingContainer'}>\n                          <li>\n                            <span>S. No.</span>\n                            <span>Slot time</span>\n                            <span>Morning/Evening</span>\n                            <span>Wait time</span>\n                            <span>Status</span>\n                            <span>&nbsp;</span>\n                          </li>\n                          {slotListing}\n                        </ul>\n                      </Col>\n                    </Row>\n                  </div>\n                </div>\n              </Col>\n            </Row>\n          </Col>\n      \n          <Col md=\"4\">\n            <ImgWithOverlayTextGroup/>\n          </Col>\n        </Row>\n      </Col>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\n    appointmentData: state.newAppointment.appointmentData,\n    slots: state.selectSlot.slots\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetSlots: (phyId, clinicId, slotDate) => dispatch(actions.getSlots(phyId, clinicId, slotDate)),\n    onSetAppointmentData: (appointmentData) => dispatch(actions.setAppointmentData(appointmentData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSlot);"]},"metadata":{},"sourceType":"module"}