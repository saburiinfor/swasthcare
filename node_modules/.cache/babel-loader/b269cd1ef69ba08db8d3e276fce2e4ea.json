{"ast":null,"code":"import * as actionTypes from './actionTypes';\nimport axios from \"axios\";\nexport const setAppointmentData = appointmentData => {\n  return {\n    type: actionTypes.SET_APPOINTMENTDATA,\n    appointmentData\n  };\n};\nexport const citiesSuccess = cityList => {\n  return {\n    type: actionTypes.CITY_SUCCESS,\n    cityList\n  };\n};\nexport const getCities = () => {\n  return dispatch => {\n    axios.get(actionTypes.API_URL + \"/Market/getcity/\").then(response => {\n      let cityList = [];\n      console.log('cities response', JSON.stringify(response.data));\n      response.data.map(function (item) {\n        cityList.push(item.name);\n      });\n      dispatch(citiesSuccess(cityList));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const appointmentTypeSuccess = appointmentTypeList => {\n  return {\n    type: actionTypes.APPOINTMENTTYPE_SUCCESS,\n    appointmentTypeList\n  };\n};\nexport const getAppointmentTypeList = () => {\n  return dispatch => {\n    axios.get(actionTypes.API_URL + \"/Appointments/appointmenttype/\").then(response => {\n      let appointmentTypeList = [];\n      console.log('appointmenttype response', JSON.stringify(response.data));\n      Array.from(response.data).map(function (item) {\n        appointmentTypeList.push(item);\n      });\n      dispatch(appointmentTypeSuccess(appointmentTypeList));\n    }).catch(err => {\n      console.log(err);\n    }); // let appointmentTypeList = [\n    //   {\n    //     appointmentTypeId: 1,\n    //     appointmentTypeLabel: 'In person'\n    //   },\n    //   {\n    //     appointmentTypeId: 2,\n    //     appointmentTypeLabel: 'Call'\n    //   },\n    //   {\n    //     appointmentTypeId: 3,\n    //     appointmentTypeLabel: 'Video'\n    //   },\n    //   {\n    //     appointmentTypeId: 4,\n    //     appointmentTypeLabel: 'On-demand video'\n    //   }\n    // ];\n    // dispatch(appointmentTypeSuccess(appointmentTypeList));\n  };\n};","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/store/actions/newAppointment.js"],"names":["actionTypes","axios","setAppointmentData","appointmentData","type","SET_APPOINTMENTDATA","citiesSuccess","cityList","CITY_SUCCESS","getCities","dispatch","get","API_URL","then","response","console","log","JSON","stringify","data","map","item","push","name","catch","err","appointmentTypeSuccess","appointmentTypeList","APPOINTMENTTYPE_SUCCESS","getAppointmentTypeList","Array","from"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAIC,eAAD,IAAqB;AACrD,SAAO;AACLC,IAAAA,IAAI,EAAEJ,WAAW,CAACK,mBADb;AAELF,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,aAAa,GAAIC,QAAD,IAAc;AACzC,SAAO;AACLH,IAAAA,IAAI,EAAEJ,WAAW,CAACQ,YADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,SAAS,GAAG,MAAM;AAC7B,SAAOC,QAAQ,IAAI;AACjBT,IAAAA,KAAK,CAACU,GAAN,CAAUX,WAAW,CAACY,OAAZ,GAAsB,kBAAhC,EAAoDC,IAApD,CACEC,QAAQ,IAAI;AACV,UAAIP,QAAQ,GAAG,EAAf;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAxB,CAA/B;AACAL,MAAAA,QAAQ,CAACK,IAAT,CAAcC,GAAd,CAAkB,UAAUC,IAAV,EAAgB;AAChCd,QAAAA,QAAQ,CAACe,IAAT,CAAcD,IAAI,CAACE,IAAnB;AACD,OAFD;AAGAb,MAAAA,QAAQ,CAACJ,aAAa,CAACC,QAAD,CAAd,CAAR;AACD,KARH,EAQKiB,KARL,CAQWC,GAAG,IAAI;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,KAVD;AAWD,GAZD;AAaD,CAdM;AAgBP,OAAO,MAAMC,sBAAsB,GAAIC,mBAAD,IAAyB;AAC7D,SAAO;AACLvB,IAAAA,IAAI,EAAEJ,WAAW,CAAC4B,uBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAME,sBAAsB,GAAG,MAAM;AAC1C,SAAOnB,QAAQ,IAAI;AACjBT,IAAAA,KAAK,CAACU,GAAN,CAAUX,WAAW,CAACY,OAAZ,GAAsB,gCAAhC,EAAkEC,IAAlE,CACEC,QAAQ,IAAI;AACV,UAAIa,mBAAmB,GAAG,EAA1B;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ,EAAwCC,IAAI,CAACC,SAAL,CAAeJ,QAAQ,CAACK,IAAxB,CAAxC;AACAW,MAAAA,KAAK,CAACC,IAAN,CAAWjB,QAAQ,CAACK,IAApB,EAA0BC,GAA1B,CAA8B,UAAUC,IAAV,EAAgB;AAC5CM,QAAAA,mBAAmB,CAACL,IAApB,CAAyBD,IAAzB;AACD,OAFD;AAGAX,MAAAA,QAAQ,CAACgB,sBAAsB,CAACC,mBAAD,CAAvB,CAAR;AACD,KARH,EAQKH,KARL,CAQWC,GAAG,IAAI;AAChBV,MAAAA,OAAO,CAACC,GAAR,CAAYS,GAAZ;AACD,KAVD,EADiB,CAYjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GA/BD;AAgCD,CAjCM","sourcesContent":["import * as actionTypes from './actionTypes';\nimport axios from \"axios\";\n\nexport const setAppointmentData = (appointmentData) => {\n  return {\n    type: actionTypes.SET_APPOINTMENTDATA,\n    appointmentData\n  };\n};\n\nexport const citiesSuccess = (cityList) => {\n  return {\n    type: actionTypes.CITY_SUCCESS,\n    cityList\n  };\n};\n\nexport const getCities = () => {\n  return dispatch => {\n    axios.get(actionTypes.API_URL + \"/Market/getcity/\").then(\n      response => {\n        let cityList = [];\n        console.log('cities response', JSON.stringify(response.data));\n        response.data.map(function (item) {\n          cityList.push(item.name);\n        });\n        dispatch(citiesSuccess(cityList));\n      }).catch(err => {\n      console.log(err);\n    });\n  };\n};\n\nexport const appointmentTypeSuccess = (appointmentTypeList) => {\n  return {\n    type: actionTypes.APPOINTMENTTYPE_SUCCESS,\n    appointmentTypeList\n  };\n};\n\nexport const getAppointmentTypeList = () => {\n  return dispatch => {\n    axios.get(actionTypes.API_URL + \"/Appointments/appointmenttype/\").then(\n      response => {\n        let appointmentTypeList = [];\n        console.log('appointmenttype response', JSON.stringify(response.data));\n        Array.from(response.data).map(function (item) {\n          appointmentTypeList.push(item);\n        });\n        dispatch(appointmentTypeSuccess(appointmentTypeList));\n      }).catch(err => {\n      console.log(err);\n    });\n    // let appointmentTypeList = [\n    //   {\n    //     appointmentTypeId: 1,\n    //     appointmentTypeLabel: 'In person'\n    //   },\n    //   {\n    //     appointmentTypeId: 2,\n    //     appointmentTypeLabel: 'Call'\n    //   },\n    //   {\n    //     appointmentTypeId: 3,\n    //     appointmentTypeLabel: 'Video'\n    //   },\n    //   {\n    //     appointmentTypeId: 4,\n    //     appointmentTypeLabel: 'On-demand video'\n    //   }\n    // ];\n    // dispatch(appointmentTypeSuccess(appointmentTypeList));\n  };\n};"]},"metadata":{},"sourceType":"module"}