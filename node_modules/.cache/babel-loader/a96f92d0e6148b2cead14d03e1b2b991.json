{"ast":null,"code":"import axios from 'axios';\nimport FormData from 'form-data';\nimport * as actionTypes from './actionTypes'; // SuccessHandler for get slots api\n\nexport const getSlotsSuccess = slots => {\n  return {\n    type: actionTypes.GET_SLOTS_SUCCESS,\n    slots\n  };\n};\nexport const getSlots = (pid, clinicid, slotDate) => {\n  return dispatch => {\n    const slotRequestData = new FormData();\n    slotRequestData.append(\"pid\", pid);\n    slotRequestData.append(\"clinicid\", clinicid);\n    slotRequestData.append(\"slotDate\", slotDate); // axios.post(actionTypes.API_URL + \"Physician/getslots/\", slotRequestData).then(\n    //   response => {\n    //     // console.log('inside profile data response inside userProfile');\n    //     // console.log(\"res ***\" + JSON.stringify(response.data));\n    //     let userProfile = response.data;\n    //     dispatch(userDetailsSuccess(userProfile));\n    //   }).catch(err => {\n    //   console.log(err);\n    // });\n\n    let slotsData = {\n      'slotDate': slotDate,\n      'phyId': pid,\n      'clinicid': clinicid,\n      'slots': [{\n        'id': '001',\n        'startTime': '10:00 AM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'morning',\n        'type': '04'\n      }, {\n        'id': '002',\n        'startTime': '11:00 AM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'morning',\n        'type': '04'\n      }, {\n        'id': '003',\n        'startTime': '12:00 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'before lunch',\n        'type': '01'\n      }, {\n        'id': '004',\n        'startTime': '1:30 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'post lunch',\n        'type': '02'\n      }, {\n        'id': '005',\n        'startTime': '3:00 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'evening',\n        'type': '04'\n      }, {\n        'id': '006',\n        'startTime': '4:00 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'evening',\n        'type': '03'\n      }, {\n        'id': '007',\n        'startTime': '7:00 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'evening',\n        'type': '04'\n      }, {\n        'id': '008',\n        'startTime': '8:00 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'evening',\n        'type': '03'\n      }, {\n        'id': '009',\n        'startTime': '9:00 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'evening',\n        'type': '03'\n      }]\n    };\n    dispatch(getSlotsSuccess(slotsData));\n  };\n};","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/store/actions/SelectSlot.js"],"names":["axios","FormData","actionTypes","getSlotsSuccess","slots","type","GET_SLOTS_SUCCESS","getSlots","pid","clinicid","slotDate","dispatch","slotRequestData","append","slotsData"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,iBADb;AAELF,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,QAAQ,GAAG,CAACC,GAAD,EAAMC,QAAN,EAAgBC,QAAhB,KAA6B;AACnD,SAAOC,QAAQ,IAAI;AACjB,UAAMC,eAAe,GAAG,IAAIX,QAAJ,EAAxB;AACAW,IAAAA,eAAe,CAACC,MAAhB,CAAuB,KAAvB,EAA8BL,GAA9B;AACAI,IAAAA,eAAe,CAACC,MAAhB,CAAuB,UAAvB,EAAmCJ,QAAnC;AACAG,IAAAA,eAAe,CAACC,MAAhB,CAAuB,UAAvB,EAAmCH,QAAnC,EAJiB,CAKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAII,SAAS,GAAG;AACd,kBAAYJ,QADE;AAEd,eAASF,GAFK;AAGd,kBAAYC,QAHE;AAId,eACE,CACE;AACE,cAAM,KADR;AAEE,qBAAa,UAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OADF,EASE;AACE,cAAM,KADR;AAEE,qBAAa,UAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OATF,EAiBE;AACE,cAAM,KADR;AAEE,qBAAa,UAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,cALZ;AAME,gBAAQ;AANV,OAjBF,EAyBE;AACE,cAAM,KADR;AAEE,qBAAa,SAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,YALZ;AAME,gBAAQ;AANV,OAzBF,EAiCE;AACE,cAAM,KADR;AAEE,qBAAa,SAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OAjCF,EAyCE;AACE,cAAM,KADR;AAEE,qBAAa,SAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OAzCF,EAiDE;AACE,cAAM,KADR;AAEE,qBAAa,SAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OAjDF,EAyDE;AACE,cAAM,KADR;AAEE,qBAAa,SAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OAzDF,EAiEE;AACE,cAAM,KADR;AAEE,qBAAa,SAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OAjEF;AALY,KAAhB;AAgFAE,IAAAA,QAAQ,CAACR,eAAe,CAACW,SAAD,CAAhB,CAAR;AACD,GA/FD;AAgGD,CAjGM","sourcesContent":["import axios from 'axios';\nimport FormData from 'form-data';\nimport * as actionTypes from './actionTypes';\n\n// SuccessHandler for get slots api\nexport const getSlotsSuccess = (slots) => {\n  return {\n    type: actionTypes.GET_SLOTS_SUCCESS,\n    slots\n  };\n};\n\nexport const getSlots = (pid, clinicid, slotDate) => {\n  return dispatch => {\n    const slotRequestData = new FormData();\n    slotRequestData.append(\"pid\", pid);\n    slotRequestData.append(\"clinicid\", clinicid);\n    slotRequestData.append(\"slotDate\", slotDate);\n    // axios.post(actionTypes.API_URL + \"Physician/getslots/\", slotRequestData).then(\n    //   response => {\n    //     // console.log('inside profile data response inside userProfile');\n    //     // console.log(\"res ***\" + JSON.stringify(response.data));\n    //     let userProfile = response.data;\n    //     dispatch(userDetailsSuccess(userProfile));\n    //   }).catch(err => {\n    //   console.log(err);\n    // });\n    let slotsData = {\n      'slotDate': slotDate,\n      'phyId': pid,\n      'clinicid': clinicid,\n      'slots':\n        [\n          {\n            'id': '001',\n            'startTime': '10:00 AM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'morning',\n            'type': '04'\n          },\n          {\n            'id': '002',\n            'startTime': '11:00 AM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'morning',\n            'type': '04'\n          },\n          {\n            'id': '003',\n            'startTime': '12:00 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'before lunch',\n            'type': '01'\n          },\n          {\n            'id': '004',\n            'startTime': '1:30 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'post lunch',\n            'type': '02'\n          },\n          {\n            'id': '005',\n            'startTime': '3:00 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'evening',\n            'type': '04'\n          },\n          {\n            'id': '006',\n            'startTime': '4:00 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'evening',\n            'type': '03'\n          },\n          {\n            'id': '007',\n            'startTime': '7:00 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'evening',\n            'type': '04'\n          },\n          {\n            'id': '008',\n            'startTime': '8:00 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'evening',\n            'type': '03'\n          },\n          {\n            'id': '009',\n            'startTime': '9:00 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'evening',\n            'type': '03'\n          }\n        ]\n    };\n    dispatch(getSlotsSuccess(slotsData));\n  };\n};"]},"metadata":{},"sourceType":"module"}