{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/components/Common/Input/Input.js\";\nimport React from 'react';\nimport { FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\nimport classes from './Input.module.css';\n\nconst CustInput = props => {\n  let inputElement = null;\n  const inputClasses = [classes.InputElement];\n\n  if (props.invalid && props.shouldValidate && props.touched) {\n    inputClasses.push(classes.Invalid);\n  }\n\n  switch (props.elementType) {\n    case 'input':\n      inputElement = /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: classes.Label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }\n      }, props.label), /*#__PURE__*/React.createElement(Input, Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        invalid: props.invalid && props.touched,\n        onChange: props.changed,\n        onBlur: props.blured,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(FormFeedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }\n      }, props.errorMessage));\n      break;\n\n    case 'textarea':\n      inputElement = /*#__PURE__*/React.createElement(\"textarea\", Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 28\n        }\n      }));\n      break;\n\n    case 'select':\n      inputElement = /*#__PURE__*/React.createElement(\"select\", {\n        className: inputClasses.join(' '),\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }\n      }, props.elementConfig.options.map(option => /*#__PURE__*/React.createElement(\"option\", {\n        key: option.value,\n        value: option.value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }\n      }, option.displayValue)));\n      break;\n\n    case 'checkbox':\n      inputElement = /*#__PURE__*/React.createElement(FormGroup, {\n        check: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        checked: props.elementConfig.checked,\n        className: classes.Label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Input, Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        onChange: props.changed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }\n      })), props.elementConfig.label));\n      break;\n\n    default:\n      inputElement = /*#__PURE__*/React.createElement(FormGroup, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Label, {\n        className: classes.Label,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, props.label), /*#__PURE__*/React.createElement(Input, Object.assign({\n        className: inputClasses.join(' ')\n      }, props.elementConfig, {\n        value: props.value,\n        invalid: props.invalid && props.touched,\n        onChange: props.changed,\n        onBlur: props.blured,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(FormFeedback, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, \"Please write at least 3 characters.\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.Input,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, inputElement);\n};\n\nexport default CustInput;","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/components/Common/Input/Input.js"],"names":["React","FormGroup","Label","Input","FormFeedback","classes","CustInput","props","inputElement","inputClasses","InputElement","invalid","shouldValidate","touched","push","Invalid","elementType","label","join","elementConfig","value","changed","blured","errorMessage","options","map","option","displayValue","checked"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FormGroup, Label, Input, FormFeedback } from \"reactstrap\";\r\nimport classes from './Input.module.css';\r\nconst CustInput = (props) => {\r\n    let inputElement = null;\r\n    const inputClasses = [classes.InputElement];\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement =\r\n                <FormGroup>\r\n                    <Label className={classes.Label}>{props.label}</Label>\r\n                    <Input\r\n                        className={inputClasses.join(' ')}\r\n                        {...props.elementConfig}\r\n                        value={props.value}\r\n                        invalid={props.invalid && props.touched}\r\n                        onChange={props.changed}\r\n                        onBlur={props.blured} />\r\n                    <FormFeedback>{props.errorMessage}</FormFeedback>\r\n                </FormGroup>;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                className={inputClasses.join(' ')}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = (\r\n                <select\r\n                    className={inputClasses.join(' ')}\r\n                    value={props.value}\r\n                    onChange={props.changed}>\r\n                    {props.elementConfig.options.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.displayValue}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            );\r\n            break;\r\n        case ('checkbox'):\r\n            inputElement = (\r\n                <FormGroup check>\r\n                    <Label checked={props.elementConfig.checked} className={classes.Label}>\r\n                        <Input\r\n                            className={inputClasses.join(' ')}\r\n                            {...props.elementConfig}\r\n                            value={props.value}\r\n                            onChange={props.changed} />\r\n                        {props.elementConfig.label}\r\n                    </Label>\r\n                </FormGroup>\r\n            );\r\n            break;\r\n        default:\r\n            inputElement =\r\n                <FormGroup>\r\n                    <Label className={classes.Label}>{props.label}</Label>\r\n                    <Input\r\n                        className={inputClasses.join(' ')}\r\n                        {...props.elementConfig}\r\n                        value={props.value}\r\n                        invalid={props.invalid && props.touched}\r\n                        onChange={props.changed}\r\n                        onBlur={props.blured} />\r\n                    <FormFeedback>Please write at least 3 characters.</FormFeedback>\r\n                </FormGroup>;\r\n    }\r\n    return (\r\n        <div className={classes.Input}>\r\n            {inputElement}\r\n        </div>\r\n    );\r\n};\r\nexport default CustInput;\r\n\r\n"]},"metadata":{},"sourceType":"module"}