{"ast":null,"code":"import _classCallCheck from\"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import{Button,Col,Row}from\"reactstrap\";import AppointmentRowGroup from\"../Appointment/AppointmentRowGroup\";import ImgWithOverlayTextGroup from\"../ImgWithOverlayText/ImgWithOverlayTextGroup\";import styles from\"../Appointment/Appointment.module.scss\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faCalendarAlt,faPen,faUser}from\"@fortawesome/free-solid-svg-icons\";import newAppointment from\"../../assets/images/newAppointment.png\";import{Helmet}from\"react-helmet\";import{Link,Redirect}from\"react-router-dom\";import{connect}from\"react-redux\";import*as actions from\"../../store/actions\";import dateformat from'dateformat';import UserProfile from\"../UserProfile/UserProfile\";import getPageLink from\"../../components/Common/WizardButtons/StageManager\";var UserDashboard=/*#__PURE__*/function(_Component){_inherits(UserDashboard,_Component);var _super=_createSuper(UserDashboard);function UserDashboard(props){var _this;_classCallCheck(this,UserDashboard);_this=_super.call(this,props);_this.initializeAppointment=function(){var appointmentData={city:null,appointmentType:null,phyId:null};// Set an activeStage counter to sessionStorage object for moving around pages in wizard\nsessionStorage.setItem('conferkare.appointment.activeStage',1);_this.props.onSetAppointmentData(appointmentData);};_this.toggle=_this.toggle.bind(_assertThisInitialized(_this));_this.state={activeTab:'1'};return _this;}_createClass(UserDashboard,[{key:\"toggle\",value:function toggle(tab){// Set the date for which we want to fetch the appointments list and show in UI\n// @TODO - for now setting it to Date, 03/07/2019, need to set as today (this.props.appointmentDate)\nvar appointmentDate=null;switch(tab){case'1':appointmentDate=dateformat(new Date('2019/07/03'),'yyyy-mm-dd');break;case'2':appointmentDate=dateformat(new Date('2019/07/04'),'yyyy-mm-dd');break;case'3':appointmentDate=dateformat(new Date('2019/07/04'),'yyyy-mm-dd');break;default:appointmentDate=dateformat(new Date(),'yyyy-mm-dd');}this.props.onSetAppointmentDate(appointmentDate);// this.props.onFilterAppointmentList();\nif(this.state.activeTab!==tab){this.setState({activeTab:tab});}}},{key:\"componentDidMount\",value:function componentDidMount(){// this.props.onGetUserProfile(sessionStorage.getItem('token'));\nvar apDate=dateformat(new Date('2019/07/03'),'yyyy-mm-dd');this.props.onSetAppointmentDate(apDate);}},{key:\"render\",value:function render(){if(this.props.userProfile.success===0){sessionStorage.setItem('conferkare.appointment.activeStage',0);return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}var pageUrl=getPageLink();return/*#__PURE__*/React.createElement(Col,{md:\"12\",className:\"mt10\"},/*#__PURE__*/React.createElement(Redirect,{to:pageUrl}),/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"style\",null,'.header .logo h2{color:#333;} .tar{text-align:right;} .mt10{margin-top:10px;} main{ background: #fff; } .header'+' .search{border:1px'+' solid #ccc}'+' @media screen and (min-width: 800px) { .header{border-bottom:1px solid #666} } ')),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"8\"},/*#__PURE__*/React.createElement(Row,{className:styles.editBtnRow},/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(Button,{className:styles.editBtn,size:\"sm\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{title:'Edit',className:\"mr-2\",color:\"#000\",size:\"1x\",icon:faPen})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{className:\"text-center\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"mr-2\",color:\"#ccc\",size:\"5x\",icon:faUser}),/*#__PURE__*/React.createElement(\"div\",{className:\"mb-4\"},\"70% profile complete\"))),this.props.profileCompliant===false&&/*#__PURE__*/React.createElement(UserProfile,null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"div\",{className:\"tar\"},/*#__PURE__*/React.createElement(Link,{to:\"/newAppointment\",onClick:this.initializeAppointment},/*#__PURE__*/React.createElement(\"img\",{src:newAppointment,className:\"appointmentBtn\"}))),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Button,{onClick:this.toggle.bind(null,'1')},\"Today\"),/*#__PURE__*/React.createElement(Button,{onClick:this.toggle.bind(null,'2')},\"Tomorrow\"),/*#__PURE__*/React.createElement(Button,{onClick:this.toggle.bind(null,'3')},/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"mr-2\",color:\"#ccc\",size:\"1x\",icon:faCalendarAlt})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\",className:styles.appointments},/*#__PURE__*/React.createElement(AppointmentRowGroup,{appointmentDate:this.props.appointmentDate}))))))),/*#__PURE__*/React.createElement(Col,{md:\"4\"},/*#__PURE__*/React.createElement(ImgWithOverlayTextGroup,null))));}}]);return UserDashboard;}(Component);var mapStateToProps=function mapStateToProps(state){return{userProfile:state.UserProfile.userProfile,profileCompliant:state.UserProfile.userProfile.dateofbirth!=='0000-00-00',appointmentDate:state.UserDashboard.appointmentDate};};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{// onGetUserProfile: (userToken) => dispatch(actions.getProfile(userToken)),\nonSetAppointmentDate:function onSetAppointmentDate(date){return dispatch(actions.setAppointmentDate(date));},onSetAppointmentData:function onSetAppointmentData(appointmentData){return dispatch(actions.setAppointmentData(appointmentData));}};};export default connect(mapStateToProps,mapDispatchToProps)(UserDashboard);","map":null,"metadata":{},"sourceType":"module"}