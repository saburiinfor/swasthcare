{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/UserDashboard/UserDashboard.js\";\nimport React, { Component } from \"react\";\nimport { Button, Col, Row } from \"reactstrap\";\nimport AppointmentRowGroup from \"../Appointment/AppointmentRowGroup\";\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\nimport styles from \"../Appointment/Appointment.module.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt, faPen, faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport newAppointment from \"../../assets/images/newAppointment.png\";\nimport { Helmet } from \"react-helmet\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport dateformat from 'dateformat';\nimport UserProfile from \"../UserProfile/UserProfile\";\n\nclass UserDashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.initializeAppointment = () => {\n      let appointmentData = {\n        city: null,\n        appointmentType: null,\n        phyId: null\n      }; // Set an activeStage counter to window object for moving around pages in wizard\n\n      window.conferkare.appointment.activeStage = 1;\n      this.props.onSetAppointmentData(appointmentData);\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      activeTab: '1'\n    };\n  }\n\n  toggle(tab) {\n    // Set the date for which we want to fetch the appointments list and show in UI\n    // @TODO - for now setting it to Date, 03/07/2019, need to set as today (this.props.appointmentDate)\n    let appointmentDate = null;\n\n    switch (tab) {\n      case '1':\n        appointmentDate = dateformat(new Date('2019/07/03'), 'yyyy-mm-dd');\n        break;\n\n      case '2':\n        appointmentDate = dateformat(new Date('2019/07/04'), 'yyyy-mm-dd');\n        break;\n\n      case '3':\n        appointmentDate = dateformat(new Date('2019/07/04'), 'yyyy-mm-dd');\n        break;\n\n      default:\n        appointmentDate = dateformat(new Date(), 'yyyy-mm-dd');\n    }\n\n    this.props.onSetAppointmentDate(appointmentDate); // this.props.onFilterAppointmentList();\n\n    if (this.state.activeTab !== tab) {\n      this.setState({\n        activeTab: tab\n      });\n    }\n  }\n\n  componentDidMount() {\n    this.props.onGetUserProfile(sessionStorage.getItem('token'));\n    const apDate = dateformat(new Date('2019/07/03'), 'yyyy-mm-dd');\n    this.props.onSetAppointmentDate(apDate);\n  }\n\n  render() {\n    if (this.props.userProfile.success === 0) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"mt10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }\n    }, '.header .logo h2{color:#333;} .tar{text-align:right;} .mt10{margin-top:10px;} main{ background: #fff; } .header' + ' .search{border:1px' + ' solid #ccc}' + ' @media screen and (min-width: 800px) { .header{border-bottom:1px solid #666} } ')), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: styles.editBtnRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: styles.editBtn,\n      size: \"sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      title: 'Edit',\n      className: \"mr-2\",\n      color: \"#000\",\n      size: \"1x\",\n      icon: faPen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"mr-2\",\n      color: \"#ccc\",\n      size: \"5x\",\n      icon: faUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"70% profile complete\"))), this.props.profileCompliant === false && /*#__PURE__*/React.createElement(UserProfile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/newAppointment\",\n      onClick: this.initializeAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 38\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: newAppointment,\n      className: \"appointmentBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 102\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: this.toggle.bind(null, '1'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 19\n      }\n    }, \"Today\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.toggle.bind(null, '2'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }\n    }, \"Tomorrow\"), /*#__PURE__*/React.createElement(Button, {\n      onClick: this.toggle.bind(null, '3'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"mr-2\",\n      color: \"#ccc\",\n      size: \"1x\",\n      icon: faCalendarAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: \"12\",\n      className: styles.appointments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(AppointmentRowGroup, {\n      appointmentDate: this.props.appointmentDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 23\n      }\n    }))))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ImgWithOverlayTextGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\n    appointmentDate: state.UserDashboard.appointmentDate\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetAppointmentDate: date => dispatch(actions.setAppointmentDate(date)),\n    onSetAppointmentData: appointmentData => dispatch(actions.setAppointmentData(appointmentData)),\n    onGetUserProfile: userToken => dispatch(actions.getProfile(userToken))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDashboard);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/UserDashboard/UserDashboard.js"],"names":["React","Component","Button","Col","Row","AppointmentRowGroup","ImgWithOverlayTextGroup","styles","FontAwesomeIcon","faCalendarAlt","faPen","faUser","newAppointment","Helmet","Link","Redirect","connect","actions","dateformat","UserProfile","UserDashboard","constructor","props","initializeAppointment","appointmentData","city","appointmentType","phyId","window","conferkare","appointment","activeStage","onSetAppointmentData","toggle","bind","state","activeTab","tab","appointmentDate","Date","onSetAppointmentDate","setState","componentDidMount","onGetUserProfile","sessionStorage","getItem","apDate","render","userProfile","success","editBtnRow","editBtn","profileCompliant","appointments","mapStateToProps","dateofbirth","mapDispatchToProps","dispatch","date","setAppointmentDate","setAppointmentData","userToken","getProfile"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button, Col, Row } from \"reactstrap\";\r\nimport AppointmentRowGroup from \"../Appointment/AppointmentRowGroup\";\r\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\r\nimport styles from \"../Appointment/Appointment.module.scss\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCalendarAlt, faPen, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport newAppointment from \"../../assets/images/newAppointment.png\";\r\nimport {Helmet} from \"react-helmet\";\r\nimport {Link, Redirect} from \"react-router-dom\"\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../store/actions\";\r\nimport dateformat from 'dateformat';\r\nimport UserProfile from \"../UserProfile/UserProfile\";\r\n\r\nclass UserDashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      activeTab: '1'\r\n    };\r\n  }\r\n  \r\n  toggle(tab) {\r\n    // Set the date for which we want to fetch the appointments list and show in UI\r\n    // @TODO - for now setting it to Date, 03/07/2019, need to set as today (this.props.appointmentDate)\r\n    let appointmentDate = null;\r\n    switch (tab) {\r\n      case '1':\r\n        appointmentDate = dateformat(new Date('2019/07/03'), 'yyyy-mm-dd');\r\n        break;\r\n      case '2':\r\n        appointmentDate = dateformat(new Date('2019/07/04'), 'yyyy-mm-dd');\r\n        break;\r\n      case '3':\r\n        appointmentDate = dateformat(new Date('2019/07/04'), 'yyyy-mm-dd');\r\n        break;\r\n      default:\r\n        appointmentDate = dateformat(new Date(), 'yyyy-mm-dd');\r\n    }\r\n    this.props.onSetAppointmentDate(appointmentDate);\r\n    // this.props.onFilterAppointmentList();\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onGetUserProfile(sessionStorage.getItem('token'));\r\n    const apDate = dateformat(new Date('2019/07/03'), 'yyyy-mm-dd');\r\n    this.props.onSetAppointmentDate(apDate);\r\n  }\r\n  \r\n  initializeAppointment = () => {\r\n    let appointmentData = {\r\n      city: null,\r\n      appointmentType: null,\r\n      phyId: null\r\n    };\r\n    // Set an activeStage counter to window object for moving around pages in wizard\r\n    window.conferkare.appointment.activeStage = 1;\r\n    this.props.onSetAppointmentData(appointmentData);\r\n  };\r\n  \r\n  render() {\r\n    if (this.props.userProfile.success === 0) {\r\n      return <Redirect to='/' />;\r\n    }\r\n    return (\r\n      <Col md=\"12\" className=\"mt10\">\r\n        <Helmet>\r\n          <style>{'.header .logo h2{color:#333;} .tar{text-align:right;} .mt10{margin-top:10px;} main{ background: #fff; } .header' +\r\n          ' .search{border:1px' +\r\n          ' solid #ccc}' +\r\n          ' @media screen and (min-width: 800px) { .header{border-bottom:1px solid #666} } '}</style>\r\n        </Helmet>\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <Row className={styles.editBtnRow}>\r\n              <Col>\r\n                <Button className={styles.editBtn} size=\"sm\">\r\n                  <FontAwesomeIcon title={'Edit'} className=\"mr-2\" color=\"#000\" size=\"1x\" icon={faPen}/>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"text-center\">\r\n                <FontAwesomeIcon className=\"mr-2\" color=\"#ccc\" size=\"5x\" icon={faUser}/>\r\n                <div className=\"mb-4\">70% profile complete</div>\r\n              </Col>\r\n            </Row>\r\n            { this.props.profileCompliant === false &&\r\n              <UserProfile/>\r\n            }\r\n            <Row>\r\n              <Col>\r\n                <div className=\"tar\"><Link to=\"/newAppointment\" onClick={this.initializeAppointment}><img src={newAppointment} className=\"appointmentBtn\"></img></Link></div>\r\n                <div>\r\n                  <Button onClick={this.toggle.bind(null, '1')}>\r\n                    Today\r\n                  </Button>\r\n                  <Button onClick={this.toggle.bind(null, '2')}>\r\n                    Tomorrow\r\n                  </Button>\r\n                  <Button onClick={this.toggle.bind(null, '3')}>\r\n                    <FontAwesomeIcon className=\"mr-2\" color=\"#ccc\" size=\"1x\" icon={faCalendarAlt}/>\r\n                  </Button>\r\n                  <Row>\r\n                    <Col sm=\"12\" className={styles.appointments}>\r\n                      <AppointmentRowGroup appointmentDate={this.props.appointmentDate} />\r\n                    </Col>\r\n                  </Row>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          <Col md=\"4\">\r\n            <ImgWithOverlayTextGroup/>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    userProfile: state.UserProfile.userProfile,\r\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\r\n    appointmentDate: state.UserDashboard.appointmentDate\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSetAppointmentDate: (date) => dispatch(actions.setAppointmentDate(date)),\r\n    onSetAppointmentData: (appointmentData) => dispatch(actions.setAppointmentData(appointmentData)),\r\n    onGetUserProfile: (userToken) => dispatch(actions.getProfile(userToken))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserDashboard);"]},"metadata":{},"sourceType":"module"}