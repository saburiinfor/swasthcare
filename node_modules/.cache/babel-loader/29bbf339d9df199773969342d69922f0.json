{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/UserProfile/UserProfile.js\";\nimport React, { Component } from 'react';\nimport { Button, Col, Row, Form, FormGroup, Label } from \"reactstrap\";\nimport \"./UserProfile.scss\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport dateformat from 'dateformat';\nimport DatePicker from 'react-date-picker';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectUserDOB = dob => {\n      console.log(dob);\n      this.state.dob = dob;\n    };\n\n    this.updateUserProfile = () => {\n      console.log(this.state.dob); // this.state.userProfile.dob = dateformat(this.state.dob, 'yyyy-mm-dd');\n\n      console.log(this.state.userProfile); // this.props.onUpdateUserProfile(this.state.userProfile);\n    };\n\n    this.state = {\n      userProfile: {\n        uid: null,\n        token: sessionStorage.getItem('token'),\n        contactNo: null,\n        dob: new Date(),\n        name: null,\n        gender: null,\n        bloodgrp: null,\n        address: null\n      },\n      dob: new Date().toISOString(),\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.state.userProfile = {\n      uid: this.props.userProfile.id,\n      name: this.props.userProfile.name,\n      gender: this.props.userProfile.gender,\n      contactNo: this.props.userProfile.contactNo,\n      dob: this.props.userProfile.dateofbirth,\n      address: this.props.userProfile.address,\n      bloodgrp: this.props.userProfile.bloodgrp,\n      token: sessionStorage.getItem('token')\n    };\n    console.log(JSON.stringify(this.props));\n    console.log(JSON.stringify(this.state));\n  }\n\n  render() {\n    let todayDate = dateformat(new Date(), 'yyyy-mm-dd');\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'profileUpdateContainer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, this.props.error !== null ? this.props.error : 'Updated successfully', /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }\n    }, \"Please set your Date of Birth to proceed.\")), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, \"Date of birth\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      value: this.state.dob,\n      returnValue: 'range',\n      onChange: this.selectUserDOB,\n      format: 'y-MM-dd',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: 'updateBtn',\n      color: \"primary\",\n      onClick: this.updateUserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, \"Update\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    error: state.UserProfile.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetUserProfile: userToken => dispatch(actions.getUserProfile(userToken)),\n    onUpdateUserProfile: userProfileData => dispatch(actions.updateUserProfile(userProfileData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/UserProfile/UserProfile.js"],"names":["React","Component","Button","Col","Row","Form","FormGroup","Label","connect","actions","dateformat","DatePicker","UserProfile","constructor","props","selectUserDOB","dob","console","log","state","updateUserProfile","userProfile","uid","token","sessionStorage","getItem","contactNo","Date","name","gender","bloodgrp","address","toISOString","error","componentDidMount","id","dateofbirth","JSON","stringify","render","todayDate","mapStateToProps","mapDispatchToProps","dispatch","onGetUserProfile","userToken","getUserProfile","onUpdateUserProfile","userProfileData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button, Col, Row, Form, FormGroup, Label } from \"reactstrap\";\nimport \"./UserProfile.scss\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport dateformat from 'dateformat';\nimport DatePicker from 'react-date-picker';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userProfile: {\n        uid: null,\n        token: sessionStorage.getItem('token'),\n        contactNo: null,\n        dob: new Date(),\n        name: null,\n        gender: null,\n        bloodgrp: null,\n        address: null\n      },\n      dob: new Date().toISOString(),\n      error: null\n    };\n  };\n  \n  componentDidMount() {\n    this.state.userProfile = {\n      uid: this.props.userProfile.id,\n      name: this.props.userProfile.name,\n      gender: this.props.userProfile.gender,\n      contactNo: this.props.userProfile.contactNo,\n      dob: this.props.userProfile.dateofbirth,\n      address: this.props.userProfile.address,\n      bloodgrp: this.props.userProfile.bloodgrp,\n      token: sessionStorage.getItem('token')\n    };\n    console.log(JSON.stringify(this.props));\n    console.log(JSON.stringify(this.state));\n  }\n  \n  selectUserDOB = (dob) => {\n    console.log(dob);\n    this.state.dob = dob;\n  };\n  \n  updateUserProfile = () => {\n    console.log(this.state.dob);\n    // this.state.userProfile.dob = dateformat(this.state.dob, 'yyyy-mm-dd');\n    console.log(this.state.userProfile);\n    // this.props.onUpdateUserProfile(this.state.userProfile);\n  };\n  \n  render() {\n    let todayDate = dateformat(new Date(), 'yyyy-mm-dd');\n    return (\n      <Row>\n        <Col md=\"12\">\n          <div className={'profileUpdateContainer'}>\n            {this.props.error !== null ? (\n              this.props.error\n            ) : (\n              'Updated successfully'\n              )}\n            <h6>\n              <strong>Please set your Date of Birth to proceed.</strong>\n            </h6>\n            <Form>\n              <FormGroup>\n                <Label>Date of birth</Label><br/>\n                <DatePicker value={this.state.dob} returnValue={'range'} onChange={this.selectUserDOB} format={'y-MM-dd'}/>\n                <Button className={'updateBtn'} color=\"primary\" onClick={this.updateUserProfile}>Update</Button>\n              </FormGroup>\n            </Form>\n          </div>\n        </Col>\n      </Row>\n    );\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    error: state.UserProfile.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetUserProfile: (userToken) => dispatch(actions.getUserProfile(userToken)),\n    onUpdateUserProfile: (userProfileData) => dispatch(actions.updateUserProfile(userProfileData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\n"]},"metadata":{},"sourceType":"module"}