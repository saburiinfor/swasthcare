{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport { browserHistory } from \"react-router\";\nimport { routerReducer } from \"react-router-redux\";\nimport authReducer from './store/reducers/auth';\nimport createUserReducer from './store/reducers/createUser';\nimport appointmentGroupReducer from './store/reducers/appointmentGroup';\nimport userDashboardReducer from './store/reducers/UserDashboard';\nimport userProfiledReducer from './store/reducers/UserProfile';\nimport logoutReducer from './store/reducers/logout';\nimport selectPhysicianReducer from './store/reducers/selectPhysician';\nimport mediaElementGroupReducer from './store/reducers/mediaElementGroup';\nimport newAppointmentReducer from './store/reducers/newAppointment';\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  createUser: createUserReducer,\n  appointmentGroup: appointmentGroupReducer,\n  UserDashboard: userDashboardReducer,\n  UserProfile: userProfiledReducer,\n  logout: logoutReducer,\n  selectPhysician: selectPhysicianReducer,\n  mediaElementGroup: mediaElementGroupReducer,\n  newAppointment: newAppointmentReducer,\n  routing: routerReducer\n});\n\nconst initializeStore = () => {\n  return createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n};\n\nconst getOrInitializeStore = () => {\n  debugger;\n\n  if (typeof window === 'undefined') {\n    return initializeStore;\n  } else {\n    if (!window.store) {\n      window.store = initializeStore();\n    }\n\n    return window.store;\n  }\n};\n\nlet reduxStore = getOrInitializeStore();\nexport const history = syncHistoryWithStore(browserHistory, reduxStore);\nexport default reduxStore;","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","thunk","syncHistoryWithStore","browserHistory","routerReducer","authReducer","createUserReducer","appointmentGroupReducer","userDashboardReducer","userProfiledReducer","logoutReducer","selectPhysicianReducer","mediaElementGroupReducer","newAppointmentReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","auth","createUser","appointmentGroup","UserDashboard","UserProfile","logout","selectPhysician","mediaElementGroup","newAppointment","routing","initializeStore","getOrInitializeStore","store","reduxStore","history"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,uBAAP,MAAoC,mCAApC;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,sBAAP,MAAmC,kCAAnC;AACA,OAAOC,wBAAP,MAAqC,oCAArC;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AAEA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CjB,OAAxE;AAEA,MAAMkB,WAAW,GAAGjB,eAAe,CAAC;AAClCkB,EAAAA,IAAI,EAAEb,WAD4B;AAElCc,EAAAA,UAAU,EAAEb,iBAFsB;AAGlCc,EAAAA,gBAAgB,EAAEb,uBAHgB;AAIlCc,EAAAA,aAAa,EAAEb,oBAJmB;AAKlCc,EAAAA,WAAW,EAAEb,mBALqB;AAMlCc,EAAAA,MAAM,EAAEb,aAN0B;AAOlCc,EAAAA,eAAe,EAAEb,sBAPiB;AAQlCc,EAAAA,iBAAiB,EAAEb,wBARe;AASlCc,EAAAA,cAAc,EAAEb,qBATkB;AAUlCc,EAAAA,OAAO,EAAEvB;AAVyB,CAAD,CAAnC;;AAaA,MAAMwB,eAAe,GAAG,MAAM;AAC5B,SAAO/B,WAAW,CAACoB,WAAD,EAAcH,gBAAgB,CAC9ChB,eAAe,CAACG,KAAD,CAD+B,CAA9B,CAAlB;AAGD,CAJD;;AAMA,MAAM4B,oBAAoB,GAAG,MAAM;AACjC;;AACA,MAAI,OAAOd,MAAP,KAAkB,WAAtB,EAAmC;AACjC,WAAOa,eAAP;AACD,GAFD,MAEO;AACL,QAAI,CAACb,MAAM,CAACe,KAAZ,EAAmB;AACjBf,MAAAA,MAAM,CAACe,KAAP,GAAeF,eAAe,EAA9B;AACD;;AACD,WAAOb,MAAM,CAACe,KAAd;AACD;AACF,CAVD;;AAYA,IAAIC,UAAU,GAAGF,oBAAoB,EAArC;AAEA,OAAO,MAAMG,OAAO,GAAG9B,oBAAoB,CAACC,cAAD,EAAiB4B,UAAjB,CAApC;AAEP,eAAeA,UAAf","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport { browserHistory } from \"react-router\";\nimport { routerReducer } from \"react-router-redux\";\nimport authReducer from './store/reducers/auth';\nimport createUserReducer from './store/reducers/createUser';\nimport appointmentGroupReducer from './store/reducers/appointmentGroup';\nimport userDashboardReducer from './store/reducers/UserDashboard';\nimport userProfiledReducer from './store/reducers/UserProfile';\nimport logoutReducer from './store/reducers/logout';\nimport selectPhysicianReducer from './store/reducers/selectPhysician';\nimport mediaElementGroupReducer from './store/reducers/mediaElementGroup';\nimport newAppointmentReducer from './store/reducers/newAppointment';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  createUser: createUserReducer,\n  appointmentGroup: appointmentGroupReducer,\n  UserDashboard: userDashboardReducer,\n  UserProfile: userProfiledReducer,\n  logout: logoutReducer,\n  selectPhysician: selectPhysicianReducer,\n  mediaElementGroup: mediaElementGroupReducer,\n  newAppointment: newAppointmentReducer,\n  routing: routerReducer\n});\n\nconst initializeStore = () => {\n  return createStore(rootReducer, composeEnhancers(\n    applyMiddleware(thunk)\n  ));\n};\n\nconst getOrInitializeStore = () => {\n  debugger;\n  if (typeof window === 'undefined') {\n    return initializeStore;\n  } else {\n    if (!window.store) {\n      window.store = initializeStore();\n    }\n    return window.store;\n  }\n};\n\nlet reduxStore = getOrInitializeStore();\n\nexport const history = syncHistoryWithStore(browserHistory, reduxStore);\n\nexport default reduxStore;"]},"metadata":{},"sourceType":"module"}