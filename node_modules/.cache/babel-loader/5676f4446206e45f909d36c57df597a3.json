{"ast":null,"code":"import axios from 'axios';\nimport FormData from 'form-data';\nimport * as actionTypes from './actionTypes';\nexport const countrySuccess = countryList => {\n  return {\n    type: actionTypes.COUNTRY_SUCCESS,\n    countryList: countryList\n  };\n};\nexport const citySuccess = cityList => {\n  return {\n    type: actionTypes.CITY_SUCCESS,\n    cityList: cityList\n  };\n};\nexport const createUserSuccess = userStatus => {\n  return {\n    type: actionTypes.CREATEUSER_SUCCESS,\n    userStatus\n  };\n};\nexport const createUser = userDataObj => {\n  return dispatch => {\n    const userData = new FormData();\n    userData.append(\"userTypeId\", userDataObj.userTypeId);\n    userData.append(\"marketId\", userDataObj.marketId);\n    userData.append(\"appId\", userDataObj.appId);\n    userData.append(\"createdBy\", userDataObj.createdBy);\n    userData.append(\"roleid\", userDataObj.roleid);\n    userData.append(\"uhid\", userDataObj.uhid);\n    userData.append(\"name\", userDataObj.name);\n    userData.append(\"email\", userDataObj.email);\n    userData.append(\"password\", userDataObj.password);\n    userData.append(\"contactNo\", userDataObj.contactNo);\n    userData.append(\"gender\", userDataObj.gender);\n    userData.append(\"city\", userDataObj.city);\n    userData.append(\"address\", userDataObj.address);\n    userData.append(\"bloodgrp\", userDataObj.bloodgrp);\n    userData.append(\"dob\", userDataObj.dob);\n    userData.append(\"status\", userDataObj.status);\n    axios.post(actionTypes.API_URL + \"/User/create/\", userData).then(response => {\n      if (response.data && response.data[\"Message\"] === \"New User is created\") {\n        dispatch(createUserSuccess('new'));\n      } else {\n        console.log(\"res else \" + JSON.stringify(response.data[\"errormsg\"]));\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const setUserStatus = () => {\n  return {\n    type: actionTypes.SET_EXIST_USER_STATUS,\n    userStatus: 'exist'\n  };\n};\nexport const getCountry = () => {\n  return dispatch => {\n    const getCountryData = new FormData();\n    getCountryData.append(\"id\", 1);\n    axios.post(actionTypes.API_URL + \"/Market/getmarket/\", getCountryData).then(response => {\n      // console.log(\"res ***\" + JSON.stringify(response));\n      // console.log(\"res ***\" + JSON.stringify(response.data[\"marketname\"]));\n      let countryList = [];\n      response.data[\"marketname\"].map(function (item) {\n        countryList.push(item.marketname);\n      });\n      dispatch(countrySuccess(countryList));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};\nexport const getCity = () => {\n  return dispatch => {\n    axios.get(actionTypes.API_URL + \"/Market/getcity/\").then(response => {\n      // console.log(\"res ***\" + JSON.stringify(response));\n      // console.log(\"res ***\" + JSON.stringify(response.data));\n      let cityList = [];\n      response.data.map(function (item) {\n        cityList.push(item.name);\n      });\n      dispatch(citySuccess(cityList));\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/store/actions/createUser.js"],"names":["axios","FormData","actionTypes","countrySuccess","countryList","type","COUNTRY_SUCCESS","citySuccess","cityList","CITY_SUCCESS","createUserSuccess","userStatus","CREATEUSER_SUCCESS","createUser","userDataObj","dispatch","userData","append","userTypeId","marketId","appId","createdBy","roleid","uhid","name","email","password","contactNo","gender","city","address","bloodgrp","dob","status","post","API_URL","then","response","data","console","log","JSON","stringify","catch","err","setUserStatus","SET_EXIST_USER_STATUS","getCountry","getCountryData","map","item","push","marketname","getCity","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AAEA,OAAO,MAAMC,cAAc,GAAIC,WAAD,IAAiB;AAC7C,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,eADb;AAELF,IAAAA,WAAW,EAAEA;AAFR,GAAP;AAID,CALM;AAMP,OAAO,MAAMG,WAAW,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLH,IAAAA,IAAI,EAAEH,WAAW,CAACO,YADb;AAELD,IAAAA,QAAQ,EAAEA;AAFL,GAAP;AAID,CALM;AAMP,OAAO,MAAME,iBAAiB,GAAIC,UAAD,IAAgB;AAC/C,SAAO;AACLN,IAAAA,IAAI,EAAEH,WAAW,CAACU,kBADb;AAELD,IAAAA;AAFK,GAAP;AAID,CALM;AAMP,OAAO,MAAME,UAAU,GAAIC,WAAD,IAAiB;AACzC,SAAOC,QAAQ,IAAI;AACjB,UAAMC,QAAQ,GAAG,IAAIf,QAAJ,EAAjB;AACAe,IAAAA,QAAQ,CAACC,MAAT,CAAgB,YAAhB,EAA8BH,WAAW,CAACI,UAA1C;AACAF,IAAAA,QAAQ,CAACC,MAAT,CAAgB,UAAhB,EAA4BH,WAAW,CAACK,QAAxC;AACAH,IAAAA,QAAQ,CAACC,MAAT,CAAgB,OAAhB,EAAyBH,WAAW,CAACM,KAArC;AACAJ,IAAAA,QAAQ,CAACC,MAAT,CAAgB,WAAhB,EAA6BH,WAAW,CAACO,SAAzC;AACAL,IAAAA,QAAQ,CAACC,MAAT,CAAgB,QAAhB,EAA0BH,WAAW,CAACQ,MAAtC;AACAN,IAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAhB,EAAwBH,WAAW,CAACS,IAApC;AACAP,IAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAhB,EAAwBH,WAAW,CAACU,IAApC;AACAR,IAAAA,QAAQ,CAACC,MAAT,CAAgB,OAAhB,EAAyBH,WAAW,CAACW,KAArC;AACAT,IAAAA,QAAQ,CAACC,MAAT,CAAgB,UAAhB,EAA4BH,WAAW,CAACY,QAAxC;AACAV,IAAAA,QAAQ,CAACC,MAAT,CAAgB,WAAhB,EAA6BH,WAAW,CAACa,SAAzC;AACAX,IAAAA,QAAQ,CAACC,MAAT,CAAgB,QAAhB,EAA0BH,WAAW,CAACc,MAAtC;AACAZ,IAAAA,QAAQ,CAACC,MAAT,CAAgB,MAAhB,EAAwBH,WAAW,CAACe,IAApC;AACAb,IAAAA,QAAQ,CAACC,MAAT,CAAgB,SAAhB,EAA2BH,WAAW,CAACgB,OAAvC;AACAd,IAAAA,QAAQ,CAACC,MAAT,CAAgB,UAAhB,EAA4BH,WAAW,CAACiB,QAAxC;AACAf,IAAAA,QAAQ,CAACC,MAAT,CAAgB,KAAhB,EAAuBH,WAAW,CAACkB,GAAnC;AACAhB,IAAAA,QAAQ,CAACC,MAAT,CAAgB,QAAhB,EAA0BH,WAAW,CAACmB,MAAtC;AACAjC,IAAAA,KAAK,CAACkC,IAAN,CAAWhC,WAAW,CAACiC,OAAZ,GAAsB,eAAjC,EAAkDnB,QAAlD,EAA4DoB,IAA5D,CACEC,QAAQ,IAAI;AACV,UAAIA,QAAQ,CAACC,IAAT,IAAiBD,QAAQ,CAACC,IAAT,CAAc,SAAd,MAA6B,qBAAlD,EAAyE;AACvEvB,QAAAA,QAAQ,CAACL,iBAAiB,CAAC,KAAD,CAAlB,CAAR;AACD,OAFD,MAEO;AACL6B,QAAAA,OAAO,CAACC,GAAR,CAAY,cAAcC,IAAI,CAACC,SAAL,CAAeL,QAAQ,CAACC,IAAT,CAAc,UAAd,CAAf,CAA1B;AACD;AACF,KAPH,EAOKK,KAPL,CAOWC,GAAG,IAAI;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,KATD;AAUD,GA5BD;AA6BD,CA9BM;AA+BP,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO;AACLxC,IAAAA,IAAI,EAAEH,WAAW,CAAC4C,qBADb;AAELnC,IAAAA,UAAU,EAAE;AAFP,GAAP;AAID,CALM;AAMP,OAAO,MAAMoC,UAAU,GAAG,MAAM;AAC9B,SAAOhC,QAAQ,IAAI;AACjB,UAAMiC,cAAc,GAAG,IAAI/C,QAAJ,EAAvB;AACA+C,IAAAA,cAAc,CAAC/B,MAAf,CAAsB,IAAtB,EAA4B,CAA5B;AACAjB,IAAAA,KAAK,CAACkC,IAAN,CAAWhC,WAAW,CAACiC,OAAZ,GAAsB,oBAAjC,EAAuDa,cAAvD,EAAuEZ,IAAvE,CACEC,QAAQ,IAAI;AACV;AACA;AACA,UAAIjC,WAAW,GAAG,EAAlB;AACAiC,MAAAA,QAAQ,CAACC,IAAT,CAAc,YAAd,EAA4BW,GAA5B,CAAgC,UAAUC,IAAV,EAAgB;AAC9C9C,QAAAA,WAAW,CAAC+C,IAAZ,CAAiBD,IAAI,CAACE,UAAtB;AACD,OAFD;AAGArC,MAAAA,QAAQ,CAACZ,cAAc,CAACC,WAAD,CAAf,CAAR;AACD,KATH,EASKuC,KATL,CASWC,GAAG,IAAI;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,KAXD;AAYD,GAfD;AAgBD,CAjBM;AAkBP,OAAO,MAAMS,OAAO,GAAG,MAAM;AAC3B,SAAOtC,QAAQ,IAAI;AACjBf,IAAAA,KAAK,CAACsD,GAAN,CAAUpD,WAAW,CAACiC,OAAZ,GAAsB,kBAAhC,EAAoDC,IAApD,CACEC,QAAQ,IAAI;AACV;AACA;AACA,UAAI7B,QAAQ,GAAG,EAAf;AACA6B,MAAAA,QAAQ,CAACC,IAAT,CAAcW,GAAd,CAAkB,UAAUC,IAAV,EAAgB;AAChC1C,QAAAA,QAAQ,CAAC2C,IAAT,CAAcD,IAAI,CAAC1B,IAAnB;AACD,OAFD;AAGAT,MAAAA,QAAQ,CAACR,WAAW,CAACC,QAAD,CAAZ,CAAR;AACD,KATH,EASKmC,KATL,CASWC,GAAG,IAAI;AAChBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACD,KAXD;AAYD,GAbD;AAcD,CAfM","sourcesContent":["import axios from 'axios';\r\nimport FormData from 'form-data';\r\nimport * as actionTypes from './actionTypes';\r\n\r\nexport const countrySuccess = (countryList) => {\r\n  return {\r\n    type: actionTypes.COUNTRY_SUCCESS,\r\n    countryList: countryList\r\n  };\r\n};\r\nexport const citySuccess = (cityList) => {\r\n  return {\r\n    type: actionTypes.CITY_SUCCESS,\r\n    cityList: cityList\r\n  };\r\n};\r\nexport const createUserSuccess = (userStatus) => {\r\n  return {\r\n    type: actionTypes.CREATEUSER_SUCCESS,\r\n    userStatus\r\n  };\r\n};\r\nexport const createUser = (userDataObj) => {\r\n  return dispatch => {\r\n    const userData = new FormData();\r\n    userData.append(\"userTypeId\", userDataObj.userTypeId);\r\n    userData.append(\"marketId\", userDataObj.marketId);\r\n    userData.append(\"appId\", userDataObj.appId);\r\n    userData.append(\"createdBy\", userDataObj.createdBy);\r\n    userData.append(\"roleid\", userDataObj.roleid);\r\n    userData.append(\"uhid\", userDataObj.uhid);\r\n    userData.append(\"name\", userDataObj.name);\r\n    userData.append(\"email\", userDataObj.email);\r\n    userData.append(\"password\", userDataObj.password);\r\n    userData.append(\"contactNo\", userDataObj.contactNo);\r\n    userData.append(\"gender\", userDataObj.gender);\r\n    userData.append(\"city\", userDataObj.city);\r\n    userData.append(\"address\", userDataObj.address);\r\n    userData.append(\"bloodgrp\", userDataObj.bloodgrp);\r\n    userData.append(\"dob\", userDataObj.dob);\r\n    userData.append(\"status\", userDataObj.status);\r\n    axios.post(actionTypes.API_URL + \"/User/create/\", userData).then(\r\n      response => {\r\n        if (response.data && response.data[\"Message\"] === \"New User is created\") {\r\n          dispatch(createUserSuccess('new'));\r\n        } else {\r\n          console.log(\"res else \" + JSON.stringify(response.data[\"errormsg\"]));\r\n        }\r\n      }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n};\r\nexport const setUserStatus = () => {\r\n  return {\r\n    type: actionTypes.SET_EXIST_USER_STATUS,\r\n    userStatus: 'exist'\r\n  };\r\n};\r\nexport const getCountry = () => {\r\n  return dispatch => {\r\n    const getCountryData = new FormData();\r\n    getCountryData.append(\"id\", 1);\r\n    axios.post(actionTypes.API_URL + \"/Market/getmarket/\", getCountryData).then(\r\n      response => {\r\n        // console.log(\"res ***\" + JSON.stringify(response));\r\n        // console.log(\"res ***\" + JSON.stringify(response.data[\"marketname\"]));\r\n        let countryList = [];\r\n        response.data[\"marketname\"].map(function (item) {\r\n          countryList.push(item.marketname);\r\n        });\r\n        dispatch(countrySuccess(countryList));\r\n      }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n};\r\nexport const getCity = () => {\r\n  return dispatch => {\r\n    axios.get(actionTypes.API_URL + \"/Market/getcity/\").then(\r\n      response => {\r\n        // console.log(\"res ***\" + JSON.stringify(response));\r\n        // console.log(\"res ***\" + JSON.stringify(response.data));\r\n        let cityList = [];\r\n        response.data.map(function (item) {\r\n          cityList.push(item.name);\r\n        });\r\n        dispatch(citySuccess(cityList));\r\n      }).catch(err => {\r\n      console.log(err);\r\n    });\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}