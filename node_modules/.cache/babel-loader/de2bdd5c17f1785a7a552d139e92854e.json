{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/Appointment/AppointmentRowGroup.js\";\nimport React, { Component } from \"react\";\nimport AppointmentRow from \"./AppointmentRow\";\nimport Aux from \"../../hoc/Auxwrap\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions/index\";\n\nclass AppointmentRowGroup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointmentsList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetAppointmentList();\n  }\n\n  render() {\n    if (this.props.appointmentsList !== undefined) {\n      let filteredList = Array.from(this.props.appointmentsList).filter(item => item.appdate !== '--' && item.appdate === this.props.appointmentDate);\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, filteredList.map((appointmentItem, index) => {\n        return /*#__PURE__*/React.createElement(AppointmentRow, {\n          appointment: appointmentItem,\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 20\n          }\n        });\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Aux, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }, \"Data loading...\");\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    appointmentsList: state.appointmentGroup.appointmentsList\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetAppointmentList: () => dispatch(actions.getAppointmentList())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentRowGroup);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/Appointment/AppointmentRowGroup.js"],"names":["React","Component","AppointmentRow","Aux","connect","actions","AppointmentRowGroup","constructor","props","state","appointmentsList","componentDidMount","onGetAppointmentList","render","undefined","filteredList","Array","from","filter","item","appdate","appointmentDate","map","appointmentItem","index","mapStateToProps","appointmentGroup","mapDispatchToProps","dispatch","getAppointmentList"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;;AAGA,MAAMC,mBAAN,SAAkCL,SAAlC,CAA4C;AAC1CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,gBAAgB,EAAE;AADP,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKH,KAAL,CAAWI,oBAAX;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKL,KAAL,CAAWE,gBAAX,KAAgCI,SAApC,EAA+C;AAC7C,UAAIC,YAAY,GAAGC,KAAK,CAACC,IAAN,CAAW,KAAKT,KAAL,CAAWE,gBAAtB,EAAwCQ,MAAxC,CAA+CC,IAAI,IAAKA,IAAI,CAACC,OAAL,KAAiB,IAAjB,IAAyBD,IAAI,CAACC,OAAL,KAAiB,KAAKZ,KAAL,CAAWa,eAA7G,CAAnB;AACA,0BACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGN,YAAY,CAACO,GAAb,CAAiB,CAACC,eAAD,EAAkBC,KAAlB,KAA4B;AAC5C,4BAAO,oBAAC,cAAD;AAAgB,UAAA,WAAW,EAAED,eAA7B;AAA8C,UAAA,GAAG,EAAEC,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,OAFA,CADH,CADF;AAOD,KATD,MASO;AACL,0BACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AAKD;AACF;;AA7ByC;;AAgC5C,MAAMC,eAAe,GAAGhB,KAAK,IAAI;AAC/B,SAAO;AACLC,IAAAA,gBAAgB,EAAED,KAAK,CAACiB,gBAAN,CAAuBhB;AADpC,GAAP;AAGD,CAJD;;AAKA,MAAMiB,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLhB,IAAAA,oBAAoB,EAAE,MAAMgB,QAAQ,CAACvB,OAAO,CAACwB,kBAAR,EAAD;AAD/B,GAAP;AAGD,CAJD;;AAMA,eAAezB,OAAO,CAACqB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,mBAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport AppointmentRow from \"./AppointmentRow\";\r\nimport Aux from \"../../hoc/Auxwrap\";\r\nimport {connect} from \"react-redux\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\n\r\nclass AppointmentRowGroup extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      appointmentsList: []\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.props.onGetAppointmentList();\r\n  }\r\n  \r\n  render() {\r\n    if (this.props.appointmentsList !== undefined) {\r\n      let filteredList = Array.from(this.props.appointmentsList).filter(item => (item.appdate !== '--' && item.appdate === this.props.appointmentDate));\r\n      return (\r\n        <Aux>\r\n          {filteredList.map((appointmentItem, index) => {\r\n            return <AppointmentRow appointment={appointmentItem} key={index}/>;\r\n          })}\r\n        </Aux>\r\n      );\r\n    } else {\r\n      return (\r\n        <Aux>\r\n          Data loading...\r\n        </Aux>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    appointmentsList: state.appointmentGroup.appointmentsList\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onGetAppointmentList: () => dispatch(actions.getAppointmentList())\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppointmentRowGroup);"]},"metadata":{},"sourceType":"module"}