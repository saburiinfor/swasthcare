{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/NewApointment/NewApointment.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row } from \"reactstrap\";\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\nimport { Helmet } from 'react-helmet';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../store/actions/index\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\nimport UserProfile from \"../UserManagement/UserProfile\";\nimport styles from \"./SelectAppointmentDate.module.scss\";\nimport WizardButtons from \"../../components/Common/WizardButtons/WizardButtons\";\nimport getPageLink from \"../../components/Common/WizardButtons/StageManager\";\n\nfunction CityOptions(cityList) {\n  let activeCities = cityList.cityList.filter(city => city.status === \"Active\");\n  let optList = activeCities.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.id,\n    value: item.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 44\n    }\n  }, item.name));\n  return optList;\n}\n\nclass NewApointment extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleAppointmentTypeChange = e => {\n      // console.log(e);\n      this.setState({\n        appointmentType: e.target.value,\n        appointmentTypeLabel: e.target.parentNode.innerText\n      });\n    };\n\n    this.handleCityChange = e => {\n      this.setState({\n        city: e.target.value\n      });\n    };\n\n    this.handlerNextBtnClick = () => {\n      this.state.appointmentData.city = this.state.city;\n      this.state.appointmentData.appointmentType = this.state.appointmentType;\n      this.state.appointmentData.appointmentTypeLabel = this.state.appointmentTypeLabel;\n      this.state.appointmentData.patientid = this.props.userProfile.id;\n      this.state.appointmentData.name = this.props.userProfile.name;\n      this.state.appointmentData.email = this.props.userProfile.email;\n      this.state.appointmentData.application_id = 1;\n      this.state.appointmentData.service = 'Consultation';\n      this.props.onSetAppointmentData(this.state.appointmentData);\n    };\n\n    this.state = {\n      city: 'All',\n      cityList: [],\n      appointmentTypeList: [],\n      appointmentType: \"04\",\n      appointmentTypeLabel: 'Clinic visit',\n      appointmentData: {\n        city: 'All',\n        appointmentType: null,\n        pid: null\n      }\n    };\n    this.handlerNextBtnClick.bind(this);\n    this.handleAppointmentTypeChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.onGetUserProfile(sessionStorage.getItem('token'));\n    this.props.onGetCities();\n    this.props.onGetAppointmentTypeList();\n  }\n\n  render() {\n    if (this.props.userProfile.success === 0) {\n      sessionStorage.setItem('conferkare.appointment.activeStage', 0);\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 14\n        }\n      });\n    } // if (this.props.appointmentData.city !== null) {\n    //   return <Redirect to='/selectPhysician'/>;\n    // }\n\n\n    const btnGroup = this.props.appointmentTypeList.map(item => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-check\",\n      key: item.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"radio\",\n      name: \"react-tips\",\n      value: item.id,\n      defaultChecked: item.id === \"04\",\n      onClick: this.handleAppointmentTypeChange,\n      className: \"form-check-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), item.apptype)));\n    const pageUrl = getPageLink();\n    return /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"mt10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: pageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }\n    }, '.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} ')), this.props.profileCompliant === false && /*#__PURE__*/React.createElement(UserProfile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"New appointment\"), /*#__PURE__*/React.createElement(Breadcrumb, {\n      activeStep: '1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.selectDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }\n    }, \"Select the appointment type and city\", /*#__PURE__*/React.createElement(WizardButtons, {\n      nextBtnCallback: this.handlerNextBtnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, '.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} .header .logo img{height:80px} ')), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.handleCityChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: 'All',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }\n    }, \"All cities\"), /*#__PURE__*/React.createElement(CityOptions, {\n      cityList: this.props.cityList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 25\n      }\n    }, \"Consultation type\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 25\n      }\n    }, btnGroup)))))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ImgWithOverlayTextGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cityList: state.newAppointment.cityList,\n    appointmentTypeList: state.newAppointment.appointmentTypeList,\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\n    appointmentData: state.newAppointment.appointmentData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetCities: () => dispatch(actions.getCities()),\n    onGetAppointmentTypeList: () => dispatch(actions.getAppointmentTypeList()),\n    onSetAppointmentData: appointmentData => dispatch(actions.setAppointmentData(appointmentData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewApointment);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/NewApointment/NewApointment.js"],"names":["React","Component","Col","Row","ImgWithOverlayTextGroup","Helmet","Link","Redirect","connect","actions","Breadcrumb","UserProfile","styles","WizardButtons","getPageLink","CityOptions","cityList","activeCities","filter","city","status","optList","map","item","id","name","NewApointment","constructor","props","handleAppointmentTypeChange","e","setState","appointmentType","target","value","appointmentTypeLabel","parentNode","innerText","handleCityChange","handlerNextBtnClick","state","appointmentData","patientid","userProfile","email","application_id","service","onSetAppointmentData","appointmentTypeList","pid","bind","componentDidMount","onGetUserProfile","sessionStorage","getItem","onGetCities","onGetAppointmentTypeList","render","success","setItem","btnGroup","apptype","pageUrl","profileCompliant","selectDate","mapStateToProps","newAppointment","dateofbirth","mapDispatchToProps","dispatch","getCities","getAppointmentTypeList","setAppointmentData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,YAAvB;AACA,OAAOC,uBAAP,MAAoC,+CAApC;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;AACA,OAAOC,WAAP,MAAwB,oDAAxB;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,MAAIC,YAAY,GAAGD,QAAQ,CAACA,QAAT,CAAkBE,MAAlB,CAAyBC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,QAAjD,CAAnB;AACA,MAAIC,OAAO,GAAGJ,YAAY,CAACK,GAAb,CAAkBC,IAAD,iBAAU;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAlB;AAAsB,IAAA,KAAK,EAAED,IAAI,CAACE,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyCF,IAAI,CAACE,IAA9C,CAA3B,CAAd;AACA,SAAOJ,OAAP;AACD;;AAED,MAAMK,aAAN,SAA4BzB,SAA5B,CAAsC;AACpC0B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAwBnBC,2BAxBmB,GAwBYC,CAAD,IAAO;AACnC;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,eAAe,EAAEF,CAAC,CAACG,MAAF,CAASC,KADd;AAEZC,QAAAA,oBAAoB,EAAEL,CAAC,CAACG,MAAF,CAASG,UAAT,CAAoBC;AAF9B,OAAd;AAID,KA9BkB;;AAAA,SAgCnBC,gBAhCmB,GAgCCR,CAAD,IAAO;AACxB,WAAKC,QAAL,CAAc;AACbZ,QAAAA,IAAI,EAAEW,CAAC,CAACG,MAAF,CAASC;AADF,OAAd;AAGD,KApCkB;;AAAA,SAsCnBK,mBAtCmB,GAsCG,MAAM;AAC1B,WAAKC,KAAL,CAAWC,eAAX,CAA2BtB,IAA3B,GAAkC,KAAKqB,KAAL,CAAWrB,IAA7C;AACA,WAAKqB,KAAL,CAAWC,eAAX,CAA2BT,eAA3B,GAA6C,KAAKQ,KAAL,CAAWR,eAAxD;AACA,WAAKQ,KAAL,CAAWC,eAAX,CAA2BN,oBAA3B,GAAkD,KAAKK,KAAL,CAAWL,oBAA7D;AACA,WAAKK,KAAL,CAAWC,eAAX,CAA2BC,SAA3B,GAAuC,KAAKd,KAAL,CAAWe,WAAX,CAAuBnB,EAA9D;AACA,WAAKgB,KAAL,CAAWC,eAAX,CAA2BhB,IAA3B,GAAkC,KAAKG,KAAL,CAAWe,WAAX,CAAuBlB,IAAzD;AACA,WAAKe,KAAL,CAAWC,eAAX,CAA2BG,KAA3B,GAAmC,KAAKhB,KAAL,CAAWe,WAAX,CAAuBC,KAA1D;AACA,WAAKJ,KAAL,CAAWC,eAAX,CAA2BI,cAA3B,GAA4C,CAA5C;AACA,WAAKL,KAAL,CAAWC,eAAX,CAA2BK,OAA3B,GAAqC,cAArC;AACA,WAAKlB,KAAL,CAAWmB,oBAAX,CAAgC,KAAKP,KAAL,CAAWC,eAA3C;AACD,KAhDkB;;AAEjB,SAAKD,KAAL,GAAa;AACXrB,MAAAA,IAAI,EAAE,KADK;AAEXH,MAAAA,QAAQ,EAAE,EAFC;AAGXgC,MAAAA,mBAAmB,EAAE,EAHV;AAIXhB,MAAAA,eAAe,EAAE,IAJN;AAKXG,MAAAA,oBAAoB,EAAE,cALX;AAMXM,MAAAA,eAAe,EAAE;AACftB,QAAAA,IAAI,EAAE,KADS;AAEfa,QAAAA,eAAe,EAAE,IAFF;AAGfiB,QAAAA,GAAG,EAAE;AAHU;AANN,KAAb;AAYA,SAAKV,mBAAL,CAAyBW,IAAzB,CAA8B,IAA9B;AACA,SAAKrB,2BAAL,CAAiCqB,IAAjC,CAAsC,IAAtC;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,KAAL,CAAWwB,gBAAX,CAA4BC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAA5B;AACA,SAAK1B,KAAL,CAAW2B,WAAX;AACA,SAAK3B,KAAL,CAAW4B,wBAAX;AACD;;AA4BDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAK7B,KAAL,CAAWe,WAAX,CAAuBe,OAAvB,KAAmC,CAAvC,EAA0C;AACxCL,MAAAA,cAAc,CAACM,OAAf,CAAuB,oCAAvB,EAA6D,CAA7D;AACA,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAJM,CAKP;AACA;AACA;;;AACA,UAAMC,QAAQ,GAAG,KAAKhC,KAAL,CAAWoB,mBAAX,CAA+B1B,GAA/B,CAAoCC,IAAD,iBAClD;AAAK,MAAA,SAAS,EAAC,YAAf;AAA4B,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,IAAI,EAAC,YAFP;AAGE,MAAA,KAAK,EAAED,IAAI,CAACC,EAHd;AAIE,MAAA,cAAc,EAAED,IAAI,CAACC,EAAL,KAAY,IAJ9B;AAKE,MAAA,OAAO,EAAE,KAAKK,2BALhB;AAME,MAAA,SAAS,EAAC,kBANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EASGN,IAAI,CAACsC,OATR,CADF,CADe,CAAjB;AAeA,UAAMC,OAAO,GAAGhD,WAAW,EAA3B;AACA,wBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAEgD,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,+JAAR,CADF,CAFF,EAKI,KAAKlC,KAAL,CAAWmC,gBAAX,KAAgC,KAAhC,iBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAQE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEnD,MAAM,CAACoD,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAEE,oBAAC,aAAD;AAAe,MAAA,eAAe,EAAE,KAAKzB,mBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,8LAAR,CADF,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,MAAA,QAAQ,EAAE,KAAKD,gBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,KAAK,EAAE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWZ,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF,CADF,eASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATR,eASa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATb,eAUE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG4C,QADH,CAFF,CADF,CAVF,CARF,CADF,CADF,CALF,CADF,eAwCE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAxCF,CARF,CADF;AAwDD;;AAnImC;;AAsItC,MAAMK,eAAe,GAAIzB,KAAD,IAAW;AACjC,SAAO;AACLxB,IAAAA,QAAQ,EAAEwB,KAAK,CAAC0B,cAAN,CAAqBlD,QAD1B;AAELgC,IAAAA,mBAAmB,EAAER,KAAK,CAAC0B,cAAN,CAAqBlB,mBAFrC;AAGLL,IAAAA,WAAW,EAAEH,KAAK,CAAC7B,WAAN,CAAkBgC,WAH1B;AAILoB,IAAAA,gBAAgB,EAAEvB,KAAK,CAAC7B,WAAN,CAAkBgC,WAAlB,CAA8BwB,WAA9B,KAA8C,YAJ3D;AAKL1B,IAAAA,eAAe,EAAED,KAAK,CAAC0B,cAAN,CAAqBzB;AALjC,GAAP;AAOD,CARD;;AAUA,MAAM2B,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLd,IAAAA,WAAW,EAAE,MAAMc,QAAQ,CAAC5D,OAAO,CAAC6D,SAAR,EAAD,CADtB;AAELd,IAAAA,wBAAwB,EAAE,MAAMa,QAAQ,CAAC5D,OAAO,CAAC8D,sBAAR,EAAD,CAFnC;AAGLxB,IAAAA,oBAAoB,EAAGN,eAAD,IAAqB4B,QAAQ,CAAC5D,OAAO,CAAC+D,kBAAR,CAA2B/B,eAA3B,CAAD;AAH9C,GAAP;AAKD,CAND;;AAQA,eAAejC,OAAO,CAACyD,eAAD,EAAkBG,kBAAlB,CAAP,CAA6C1C,aAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Col, Row} from \"reactstrap\";\r\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\r\nimport {Helmet} from 'react-helmet';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\r\nimport UserProfile from \"../UserManagement/UserProfile\";\r\nimport styles from \"./SelectAppointmentDate.module.scss\";\r\nimport WizardButtons from \"../../components/Common/WizardButtons/WizardButtons\";\r\nimport getPageLink from \"../../components/Common/WizardButtons/StageManager\";\r\n\r\nfunction CityOptions(cityList) {\r\n  let activeCities = cityList.cityList.filter(city => city.status === \"Active\");\r\n  let optList = activeCities.map((item) => <option key={item.id} value={item.name}>{item.name}</option> );\r\n  return optList;\r\n}\r\n\r\nclass NewApointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      city: 'All',\r\n      cityList: [],\r\n      appointmentTypeList: [],\r\n      appointmentType: \"04\",\r\n      appointmentTypeLabel: 'Clinic visit',\r\n      appointmentData: {\r\n        city: 'All',\r\n        appointmentType: null,\r\n        pid: null\r\n      }\r\n    };\r\n    this.handlerNextBtnClick.bind(this);\r\n    this.handleAppointmentTypeChange.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.props.onGetUserProfile(sessionStorage.getItem('token'));\r\n    this.props.onGetCities();\r\n    this.props.onGetAppointmentTypeList();\r\n  }\r\n  \r\n  handleAppointmentTypeChange = (e) => {\r\n    // console.log(e);\r\n    this.setState({\r\n      appointmentType: e.target.value,\r\n      appointmentTypeLabel: e.target.parentNode.innerText\r\n    });\r\n  };\r\n  \r\n  handleCityChange = (e) => {\r\n    this.setState({\r\n     city: e.target.value\r\n    });\r\n  };\r\n  \r\n  handlerNextBtnClick = () => {\r\n    this.state.appointmentData.city = this.state.city;\r\n    this.state.appointmentData.appointmentType = this.state.appointmentType;\r\n    this.state.appointmentData.appointmentTypeLabel = this.state.appointmentTypeLabel;\r\n    this.state.appointmentData.patientid = this.props.userProfile.id;\r\n    this.state.appointmentData.name = this.props.userProfile.name;\r\n    this.state.appointmentData.email = this.props.userProfile.email;\r\n    this.state.appointmentData.application_id = 1;\r\n    this.state.appointmentData.service = 'Consultation';\r\n    this.props.onSetAppointmentData(this.state.appointmentData);\r\n  };\r\n  \r\n  render() {\r\n    if (this.props.userProfile.success === 0) {\r\n      sessionStorage.setItem('conferkare.appointment.activeStage', 0);\r\n      return <Redirect to='/'/>;\r\n    }\r\n    // if (this.props.appointmentData.city !== null) {\r\n    //   return <Redirect to='/selectPhysician'/>;\r\n    // }\r\n    const btnGroup = this.props.appointmentTypeList.map((item) => (\r\n      <div className=\"form-check\" key={item.id}>\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            name=\"react-tips\"\r\n            value={item.id}\r\n            defaultChecked={item.id === \"04\"}\r\n            onClick={this.handleAppointmentTypeChange}\r\n            className=\"form-check-input\"\r\n          />\r\n          {item.apptype}\r\n        </label>\r\n      </div>\r\n    ));\r\n    const pageUrl = getPageLink();\r\n    return (\r\n      <Col md=\"12\" className=\"mt10\">\r\n        <Redirect to={pageUrl}/>\r\n        <Helmet>\r\n          <style>{'.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} '}</style>\r\n        </Helmet>\r\n        { this.props.profileCompliant === false &&\r\n          <UserProfile/>\r\n        }\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <div>\r\n              <h2>New appointment</h2>\r\n              <Breadcrumb activeStep={'1'} />\r\n            </div>\r\n            <Row>\r\n              <Col>\r\n                <div className={styles.selectDate}>\r\n                  <h4>\r\n                    Select the appointment type and city\r\n                    <WizardButtons nextBtnCallback={this.handlerNextBtnClick} />\r\n                  </h4>\r\n                  <Helmet>\r\n                    <style>{'.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} .header .logo img{height:80px} '}</style>\r\n                  </Helmet>\r\n                  <div>\r\n                    <Row>\r\n                      <Col>\r\n                        <h5>City</h5>\r\n                        <select onChange={this.handleCityChange}>\r\n                          <option value={'All'}>All cities</option>\r\n                          <CityOptions cityList={this.props.cityList}/>\r\n                        </select>\r\n                      </Col>\r\n                    </Row><br/><br/>\r\n                    <Row>\r\n                      <Col>\r\n                        <h5>Consultation type</h5>\r\n                        <form>\r\n                          {btnGroup}\r\n                        </form>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          \r\n          <Col md=\"4\">\r\n            <ImgWithOverlayTextGroup/>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cityList: state.newAppointment.cityList,\r\n    appointmentTypeList: state.newAppointment.appointmentTypeList,\r\n    userProfile: state.UserProfile.userProfile,\r\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\r\n    appointmentData: state.newAppointment.appointmentData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetCities: () => dispatch(actions.getCities()),\r\n    onGetAppointmentTypeList: () => dispatch(actions.getAppointmentTypeList()),\r\n    onSetAppointmentData: (appointmentData) => dispatch(actions.setAppointmentData(appointmentData))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewApointment);"]},"metadata":{},"sourceType":"module"}