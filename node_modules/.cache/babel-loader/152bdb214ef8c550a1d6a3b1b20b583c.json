{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/NewApointment/SelectAppointmentDate.js\";\nimport React, { Component } from \"react\";\nimport { Col, CustomInput, Input, Row } from \"reactstrap\";\nimport DatePicker from \"react-datepicker\";\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\nimport styles from \"./SelectAppointmentDate.module.scss\";\nimport { Helmet } from \"react-helmet\"; // import CustomCalenderIcon from \"../../components/Common/CustomCalenderIcon/CustomCalenderIcon\";\n\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\nimport WizardButtons from \"../../components/Common/WizardButtons/WizardButtons\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../store/actions\";\nimport { Redirect } from \"react-router-dom\";\nimport getPageLink from \"../../components/Common/WizardButtons/StageManager\";\n\nclass SelectAppointmentDate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.zeroPrefixing = val => {\n      return val < 10 ? '0' + val : val;\n    };\n\n    this.getDayText = day => {\n      return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][day];\n    };\n\n    this.generateAppRegId = (year, clinicid) => {\n      return `A${year}${clinicid}`;\n    };\n\n    this.onChangeHandler = e => {\n      if (e.target.value === \"today\") {\n        var date = new Date();\n        let day = date.getDay(),\n            fullYear = date.getFullYear();\n        date = // date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n        date.getFullYear() + \"-\" + this.zeroPrefixing(date.getMonth() + 1) + \"-\" + this.zeroPrefixing(date.getDate());\n        this.setState({\n          [e.target.name]: date,\n          currentDate: e.target.value,\n          appdate: date,\n          appday: this.getDayText(day),\n          appregid: this.generateAppRegId(fullYear, this.props.appointmentData.clinicid)\n        });\n      }\n\n      if (e.target.value === \"tomorrow\") {\n        let date = new Date();\n        date.setDate(date.getDate() + 1); // even 32 is acceptable\n\n        let day = date.getDay(),\n            fullYear = date.getFullYear();\n        let tomorrow = // date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n        date.getFullYear() + \"-\" + this.zeroPrefixing(date.getMonth() + 1) + \"-\" + this.zeroPrefixing(date.getDate());\n        this.setState({\n          [e.target.name]: tomorrow,\n          currentDate: e.target.value,\n          appdate: tomorrow,\n          appday: this.getDayText(day),\n          appregid: this.generateAppRegId(fullYear, this.props.appointmentData.clinicid)\n        });\n      }\n    };\n\n    this.handleDateChange = m => {\n      this.setState({\n        startDate: m\n      });\n    };\n\n    this.handlerNextBtnClick = () => {\n      this.props.appointmentData.appdate = this.state.appdate;\n      this.props.appointmentData.appday = this.state.appday;\n      this.props.appointmentData.appregid = this.state.appregid;\n      this.props.onSetAppointmentData(this.props.appointmentData);\n    };\n\n    this.state = {\n      startDate: new Date(),\n      inputDate: \"\",\n      currentDate: \"\",\n      appday: 'Sun',\n      appregid: 'A202026'\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handlerNextBtnClick.bind(this);\n  }\n\n  componentDidMount() {}\n\n  handleChange(date) {\n    let newFormatedDate;\n    newFormatedDate = // date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\n    date.getFullYear() + \"-\" + this.zeroPrefixing(date.getMonth() + 1) + \"-\" + this.zeroPrefixing(date.getDate());\n    this.setState({\n      startDate: date,\n      inputDate: newFormatedDate,\n      appdate: newFormatedDate,\n      appday: this.getDayText(date.getDay()),\n      appregid: this.generateAppRegId(date.getFullYear(), this.props.appointmentData.clinicid)\n    });\n  }\n\n  render() {\n    if (this.props.userProfile.success === 0) {\n      sessionStorage.setItem('conferkare.appointment.activeStage', 0);\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 14\n        }\n      });\n    }\n\n    const pageUrl = getPageLink();\n    return /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"mt10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Redirect, {\n      to: pageUrl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Breadcrumb, {\n      activeStep: '3',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.selectDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, \"Select the Date\", /*#__PURE__*/React.createElement(WizardButtons, {\n      nextBtnCallback: this.handlerNextBtnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, '.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} .header .logo img{height:80px} ')), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"appointmentDate\",\n      id: \"appointmentDate\",\n      value: this.state.inputDate,\n      onChange: this.onChangeHandler,\n      placeholder: \"YYYY-MM-DD\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: \"today\",\n      name: \"inputDate\",\n      label: \"Today\",\n      value: \"today\",\n      checked: this.state.currentDate === \"today\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(CustomInput, {\n      type: \"radio\",\n      id: \"tomorrow\",\n      name: \"inputDate\",\n      label: \"Tomorrow\",\n      value: \"tomorrow\",\n      checked: this.state.currentDate === \"tomorrow\",\n      onChange: this.onChangeHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"mt-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(DatePicker, {\n      selected: this.state.startDate,\n      inline: true,\n      onChange: this.handleChange,\n      startDate: new Date(),\n      monthsShown: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    })))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ImgWithOverlayTextGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 24\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\n    appointmentData: state.newAppointment.appointmentData\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSetAppointmentData: appointmentData => dispatch(actions.setAppointmentData(appointmentData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectAppointmentDate);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/NewApointment/SelectAppointmentDate.js"],"names":["React","Component","Col","CustomInput","Input","Row","DatePicker","ImgWithOverlayTextGroup","styles","Helmet","Breadcrumb","WizardButtons","connect","actions","Redirect","getPageLink","SelectAppointmentDate","constructor","props","zeroPrefixing","val","getDayText","day","generateAppRegId","year","clinicid","onChangeHandler","e","target","value","date","Date","getDay","fullYear","getFullYear","getMonth","getDate","setState","name","currentDate","appdate","appday","appregid","appointmentData","setDate","tomorrow","handleDateChange","m","startDate","handlerNextBtnClick","state","onSetAppointmentData","inputDate","handleChange","bind","componentDidMount","newFormatedDate","render","userProfile","success","sessionStorage","setItem","pageUrl","selectDate","mapStateToProps","UserProfile","profileCompliant","dateofbirth","newAppointment","mapDispatchToProps","dispatch","setAppointmentData"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Col, CustomInput, Input, Row} from \"reactstrap\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\r\nimport styles from \"./SelectAppointmentDate.module.scss\";\r\nimport {Helmet} from \"react-helmet\";\r\n// import CustomCalenderIcon from \"../../components/Common/CustomCalenderIcon/CustomCalenderIcon\";\r\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\r\nimport WizardButtons from \"../../components/Common/WizardButtons/WizardButtons\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../../store/actions\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport getPageLink from \"../../components/Common/WizardButtons/StageManager\";\r\n\r\nclass SelectAppointmentDate extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      startDate: new Date(),\r\n      inputDate: \"\",\r\n      currentDate: \"\",\r\n      appday: 'Sun',\r\n      appregid: 'A202026'\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handlerNextBtnClick.bind(this);\r\n  }\r\n  \r\n  componentDidMount() {\r\n  }\r\n  \r\n  zeroPrefixing = (val) => {\r\n    return (val < 10) ? '0' + val : val;\r\n  };\r\n  \r\n  getDayText = (day) => {\r\n    return ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'][day];\r\n  };\r\n  \r\n  generateAppRegId = (year, clinicid) => {\r\n    return `A${year}${clinicid}`;\r\n  };\r\n  \r\n  handleChange(date) {\r\n    let newFormatedDate;\r\n    newFormatedDate =\r\n      // date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n      date.getFullYear() + \"-\" + this.zeroPrefixing(date.getMonth() + 1) + \"-\" + this.zeroPrefixing(date.getDate());\r\n    \r\n    this.setState({\r\n      startDate: date,\r\n      inputDate: newFormatedDate,\r\n      appdate: newFormatedDate,\r\n      appday: this.getDayText(date.getDay()),\r\n      appregid: this.generateAppRegId(date.getFullYear(), this.props.appointmentData.clinicid)\r\n    });\r\n  }\r\n  \r\n  onChangeHandler = e => {\r\n    if (e.target.value === \"today\") {\r\n      var date = new Date();\r\n      let day = date.getDay(), fullYear = date.getFullYear();\r\n      date =\r\n        // date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n        date.getFullYear() + \"-\" + this.zeroPrefixing(date.getMonth() + 1) + \"-\" + this.zeroPrefixing(date.getDate());\r\n      \r\n      this.setState({[e.target.name]: date, currentDate: e.target.value, appdate: date, appday: this.getDayText(day), appregid: this.generateAppRegId(fullYear, this.props.appointmentData.clinicid) });\r\n    }\r\n    \r\n    if (e.target.value === \"tomorrow\") {\r\n      let date = new Date();\r\n      date.setDate(date.getDate() + 1); // even 32 is acceptable\r\n\r\n      let day = date.getDay(), fullYear = date.getFullYear();\r\n      \r\n      let tomorrow =\r\n        // date.getDate() + \"/\" + (date.getMonth() + 1) + \"/\" + date.getFullYear();\r\n        date.getFullYear() + \"-\" + this.zeroPrefixing(date.getMonth() + 1) + \"-\" + this.zeroPrefixing(date.getDate());\r\n      \r\n      this.setState({[e.target.name]: tomorrow, currentDate: e.target.value, appdate: tomorrow, appday: this.getDayText(day), appregid: this.generateAppRegId(fullYear, this.props.appointmentData.clinicid) });\r\n    }\r\n  };\r\n  \r\n  handleDateChange = m => {\r\n    this.setState({startDate: m});\r\n  };\r\n  \r\n  handlerNextBtnClick = () => {\r\n    this.props.appointmentData.appdate = this.state.appdate;\r\n    this.props.appointmentData.appday = this.state.appday;\r\n    this.props.appointmentData.appregid = this.state.appregid;\r\n    this.props.onSetAppointmentData(this.props.appointmentData);\r\n  };\r\n  \r\n  render() {\r\n    if (this.props.userProfile.success === 0) {\r\n      sessionStorage.setItem('conferkare.appointment.activeStage', 0);\r\n      return <Redirect to='/'/>;\r\n    }\r\n    const pageUrl = getPageLink();\r\n    return (\r\n      <Col md=\"12\" className=\"mt10\">\r\n        <Redirect to={pageUrl}/>\r\n        <Row>\r\n          <Col>\r\n            <Breadcrumb activeStep={'3'} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <div className={styles.selectDate}>\r\n              <h4>\r\n                Select the Date\r\n                <WizardButtons nextBtnCallback={this.handlerNextBtnClick} />\r\n              </h4>\r\n              <Helmet>\r\n                <style>{'.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} .header .logo img{height:80px} '}</style>\r\n              </Helmet>\r\n              <div>\r\n                <Row>\r\n                  <Col md=\"4\">\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"appointmentDate\"\r\n                      id=\"appointmentDate\"\r\n                      value={this.state.inputDate}\r\n                      onChange={this.onChangeHandler}\r\n                      placeholder=\"YYYY-MM-DD\"\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"8\">\r\n                    \r\n                    {/*<DatePicker*/}\r\n                    {/*  customInput={*/}\r\n                    {/*    <CustomCalenderIcon*/}\r\n                    {/*      onClickCustHandler={this.handleChange}*/}\r\n                    {/*    />*/}\r\n                    {/*  }*/}\r\n                    {/*  selected={this.state.startDate}*/}\r\n                    {/*  onChange={this.handleChange}*/}\r\n                    {/*/>*/}\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col><br/>\r\n                    <CustomInput\r\n                      type=\"radio\"\r\n                      id=\"today\"\r\n                      name=\"inputDate\"\r\n                      label=\"Today\"\r\n                      value=\"today\"\r\n                      checked={this.state.currentDate === \"today\"}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                    <CustomInput\r\n                      type=\"radio\"\r\n                      id=\"tomorrow\"\r\n                      name=\"inputDate\"\r\n                      label=\"Tomorrow\"\r\n                      value=\"tomorrow\"\r\n                      checked={this.state.currentDate === \"tomorrow\"}\r\n                      onChange={this.onChangeHandler}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col md=\"12\" className=\"mt-5\">\r\n                    <DatePicker\r\n                      selected={this.state.startDate}\r\n                      inline\r\n                      onChange={this.handleChange}\r\n                      startDate={new Date()}\r\n                      monthsShown={2}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </div>\r\n          </Col>\r\n          <Col md=\"4\">{<ImgWithOverlayTextGroup/>}</Col>\r\n        </Row>\r\n      </Col>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    userProfile: state.UserProfile.userProfile,\r\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\r\n    appointmentData: state.newAppointment.appointmentData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSetAppointmentData: (appointmentData) => dispatch(actions.setAppointmentData(appointmentData)),\r\n  };\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectAppointmentDate);\r\n"]},"metadata":{},"sourceType":"module"}