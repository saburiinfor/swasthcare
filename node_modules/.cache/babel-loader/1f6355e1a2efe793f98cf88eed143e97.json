{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/components/Common/ButtonWithTick/ButtonWithTick.js\";\nimport React, { Component } from \"react\";\nimport { Button } from \"reactstrap\"; //import classnames from \"classnames\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport styles from \"./ButtonWithTick.module.css\";\n\nclass ButtonWithTick extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn\n    }), function () {\n      this.props.handleStateChange(this.state.isToggleOn);\n    });\n  }\n\n  render() {\n    let tickIcon, buttonText;\n\n    if (this.props.isToggleOn) {\n      tickIcon = /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: this.props.childClass,\n        color: this.props.childColor,\n        size: this.props.childSize,\n        icon: this.props.childIcon,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      });\n      buttonText = this.props.selectedText;\n    } else {\n      buttonText = this.props.text;\n    }\n\n    return /*#__PURE__*/React.createElement(Button, {\n      onClick: this.handleClick.bind(this),\n      size: this.props.size,\n      color: this.props.color,\n      className: this.props.isToggleOn ? styles.confirmed : styles.customButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, buttonText, tickIcon);\n  }\n\n}\n\nexport default ButtonWithTick;","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/components/Common/ButtonWithTick/ButtonWithTick.js"],"names":["React","Component","Button","FontAwesomeIcon","styles","ButtonWithTick","constructor","props","state","isToggleOn","handleClick","bind","e","preventDefault","setState","prevState","handleStateChange","render","tickIcon","buttonText","childClass","childColor","childSize","childIcon","selectedText","text","size","color","confirmed","customButton"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,QAAqB,YAArB,C,CACA;;AACA,SAAQC,eAAR,QAA8B,gCAA9B;AACA,OAAOC,MAAP,MAAmB,6BAAnB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AACrCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,UAAU,EAAE;AAAb,KAAb;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,CAACE,CAAD,EAAI;AACbA,IAAAA,CAAC,CAACC,cAAF;AACA,SAAKC,QAAL,CACEC,SAAS,KAAK;AACZN,MAAAA,UAAU,EAAE,CAACM,SAAS,CAACN;AADX,KAAL,CADX,EAIE,YAAY;AACV,WAAKF,KAAL,CAAWS,iBAAX,CAA6B,KAAKR,KAAL,CAAWC,UAAxC;AACD,KANH;AAQD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,QAAIC,QAAJ,EAAcC,UAAd;;AACA,QAAI,KAAKZ,KAAL,CAAWE,UAAf,EAA2B;AACzBS,MAAAA,QAAQ,gBACN,oBAAC,eAAD;AAAiB,QAAA,SAAS,EAAE,KAAKX,KAAL,CAAWa,UAAvC;AAAmD,QAAA,KAAK,EAAE,KAAKb,KAAL,CAAWc,UAArE;AAAiF,QAAA,IAAI,EAAE,KAAKd,KAAL,CAAWe,SAAlG;AAA6G,QAAA,IAAI,EAAE,KAAKf,KAAL,CAAWgB,SAA9H;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGAJ,MAAAA,UAAU,GAAG,KAAKZ,KAAL,CAAWiB,YAAxB;AACD,KALD,MAKO;AACLL,MAAAA,UAAU,GAAG,KAAKZ,KAAL,CAAWkB,IAAxB;AACD;;AACD,wBACE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKf,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAjB;AAA8C,MAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWmB,IAA/D;AAAqE,MAAA,KAAK,EAAE,KAAKnB,KAAL,CAAWoB,KAAvF;AAA8F,MAAA,SAAS,EACnG,KAAKpB,KAAL,CAAWE,UAAX,GAAwBL,MAAM,CAACwB,SAA/B,GAA2CxB,MAAM,CAACyB,YADtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGGV,UAHH,EAIGD,QAJH,CADF;AAQD;;AArCoC;;AAwCvC,eAAeb,cAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Button} from \"reactstrap\";\r\n//import classnames from \"classnames\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport styles from \"./ButtonWithTick.module.css\";\r\n\r\nclass ButtonWithTick extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {isToggleOn: false};\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n  \r\n  handleClick(e) {\r\n    e.preventDefault();\r\n    this.setState(\r\n      prevState => ({\r\n        isToggleOn: !prevState.isToggleOn\r\n      }),\r\n      function () {\r\n        this.props.handleStateChange(this.state.isToggleOn);\r\n      }\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    let tickIcon, buttonText;\r\n    if (this.props.isToggleOn) {\r\n      tickIcon = (\r\n        <FontAwesomeIcon className={this.props.childClass} color={this.props.childColor} size={this.props.childSize} icon={this.props.childIcon}/>\r\n      );\r\n      buttonText = this.props.selectedText;\r\n    } else {\r\n      buttonText = this.props.text;\r\n    }\r\n    return (\r\n      <Button onClick={this.handleClick.bind(this)} size={this.props.size} color={this.props.color} className={\r\n          this.props.isToggleOn ? styles.confirmed : styles.customButton\r\n        }>\r\n        {buttonText}\r\n        {tickIcon}\r\n      </Button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ButtonWithTick;"]},"metadata":{},"sourceType":"module"}