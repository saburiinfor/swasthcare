{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport { browserHistory } from \"react-router\";\nimport { routerReducer } from \"react-router-redux\";\nimport authReducer from './store/reducers/auth';\nimport createUserReducer from './store/reducers/createUser';\nimport appointmentGroupReducer from './store/reducers/appointmentGroup';\nimport userDashboardReducer from './store/reducers/UserDashboard';\nimport userProfiledReducer from './store/reducers/UserProfile';\nimport logoutReducer from './store/reducers/logout';\nimport selectPhysicianReducer from './store/reducers/selectPhysician';\nimport mediaElementGroupReducer from './store/reducers/mediaElementGroup';\nimport newAppointmentReducer from './store/reducers/newAppointment';\nimport selectSlotReducer from './store/reducers/SelectSlot';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['auth', 'UserProfile']\n};\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  createUser: createUserReducer,\n  appointmentGroup: appointmentGroupReducer,\n  UserDashboard: userDashboardReducer,\n  UserProfile: userProfiledReducer,\n  logout: logoutReducer,\n  selectPhysician: selectPhysicianReducer,\n  mediaElementGroup: mediaElementGroupReducer,\n  newAppointment: newAppointmentReducer,\n  selectSlot: selectPhysicianReducer,\n  routing: routerReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = createStore(persistedReducer, composeEnhancers(applyMiddleware(thunk))); // export const history = syncHistoryWithStore(browserHistory, store);\n\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","thunk","syncHistoryWithStore","browserHistory","routerReducer","authReducer","createUserReducer","appointmentGroupReducer","userDashboardReducer","userProfiledReducer","logoutReducer","selectPhysicianReducer","mediaElementGroupReducer","newAppointmentReducer","selectSlotReducer","persistStore","persistReducer","storage","persistConfig","key","blacklist","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","rootReducer","auth","createUser","appointmentGroup","UserDashboard","UserProfile","logout","selectPhysician","mediaElementGroup","newAppointment","selectSlot","routing","persistedReducer","store","persistor"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,oBAAT,QAAqC,oBAArC;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAOC,uBAAP,MAAoC,mCAApC;AACA,OAAOC,oBAAP,MAAiC,gCAAjC;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,OAAOC,sBAAP,MAAmC,kCAAnC;AACA,OAAOC,wBAAP,MAAqC,oCAArC;AACA,OAAOC,qBAAP,MAAkC,iCAAlC;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;;AAEhD,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBF,EAAAA,OAFoB;AAGpBG,EAAAA,SAAS,EAAE,CAAC,MAAD,EAAS,aAAT;AAHS,CAAtB;AAMA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CxB,OAAxE;AAEA,MAAMyB,WAAW,GAAGxB,eAAe,CAAC;AAClCyB,EAAAA,IAAI,EAAEpB,WAD4B;AAElCqB,EAAAA,UAAU,EAAEpB,iBAFsB;AAGlCqB,EAAAA,gBAAgB,EAAEpB,uBAHgB;AAIlCqB,EAAAA,aAAa,EAAEpB,oBAJmB;AAKlCqB,EAAAA,WAAW,EAAEpB,mBALqB;AAMlCqB,EAAAA,MAAM,EAAEpB,aAN0B;AAOlCqB,EAAAA,eAAe,EAAEpB,sBAPiB;AAQlCqB,EAAAA,iBAAiB,EAAEpB,wBARe;AASlCqB,EAAAA,cAAc,EAAEpB,qBATkB;AAUlCqB,EAAAA,UAAU,EAAEvB,sBAVsB;AAWlCwB,EAAAA,OAAO,EAAE/B;AAXyB,CAAD,CAAnC;AAcA,MAAMgC,gBAAgB,GAAGpB,cAAc,CAACE,aAAD,EAAgBM,WAAhB,CAAvC;AAEA,MAAMa,KAAK,GAAGxC,WAAW,CAACuC,gBAAD,EAAmBf,gBAAgB,CAC1DvB,eAAe,CAACG,KAAD,CAD2C,CAAnC,CAAzB,C,CAIA;;AAEA,OAAO,MAAMqC,SAAS,GAAGvB,YAAY,CAACsB,KAAD,CAA9B;AAEP,eAAeA,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk';\nimport { syncHistoryWithStore } from 'react-router-redux';\nimport { browserHistory } from \"react-router\";\nimport { routerReducer } from \"react-router-redux\";\nimport authReducer from './store/reducers/auth';\nimport createUserReducer from './store/reducers/createUser';\nimport appointmentGroupReducer from './store/reducers/appointmentGroup';\nimport userDashboardReducer from './store/reducers/UserDashboard';\nimport userProfiledReducer from './store/reducers/UserProfile';\nimport logoutReducer from './store/reducers/logout';\nimport selectPhysicianReducer from './store/reducers/selectPhysician';\nimport mediaElementGroupReducer from './store/reducers/mediaElementGroup';\nimport newAppointmentReducer from './store/reducers/newAppointment';\nimport selectSlotReducer from './store/reducers/SelectSlot';\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  blacklist: ['auth', 'UserProfile']\n};\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  createUser: createUserReducer,\n  appointmentGroup: appointmentGroupReducer,\n  UserDashboard: userDashboardReducer,\n  UserProfile: userProfiledReducer,\n  logout: logoutReducer,\n  selectPhysician: selectPhysicianReducer,\n  mediaElementGroup: mediaElementGroupReducer,\n  newAppointment: newAppointmentReducer,\n  selectSlot: selectPhysicianReducer,\n  routing: routerReducer\n});\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst store = createStore(persistedReducer, composeEnhancers(\n  applyMiddleware(thunk)\n));\n\n// export const history = syncHistoryWithStore(browserHistory, store);\n\nexport const persistor = persistStore(store);\n\nexport default store;"]},"metadata":{},"sourceType":"module"}