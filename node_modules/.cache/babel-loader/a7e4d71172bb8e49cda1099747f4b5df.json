{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/UserProfile/UserProfile.js\";\nimport React, { Component } from 'react';\nimport { Button, Col, Row, Form, FormGroup, Label } from \"reactstrap\";\nimport \"./UserProfile.scss\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport dateformat from 'dateformat';\nimport DatePicker from 'react-date-picker';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n\n    this.selectUserDOB = dob => {\n      this.setState({\n        dob\n      });\n    };\n\n    this.updateUserProfile = () => {\n      this.state.userProfile.dob = dateformat(this.state.dob, 'yyyy-mm-dd');\n      this.props.onUpdateUserProfile(this.state.userProfile);\n    };\n\n    this.state = {\n      userProfile: {\n        uid: null,\n        token: null,\n        dob: new Date(),\n        name: null,\n        gender: null,\n        bloodgrp: null,\n        Address: null,\n        email: null\n      },\n      dob: new Date(),\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    this.state.userProfile = {\n      uid: this.props.userProfile.id,\n      dob: this.props.userProfile.dateofbirth,\n      token: sessionStorage.getItem('token')\n    };\n  }\n\n  render() {\n    let todayDate = dateformat(new Date(), 'yyyy-mm-dd');\n    return /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'profileUpdateContainer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, this.props.error !== null && /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }\n    }, this.props.error, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 46\n      }\n    })), /*#__PURE__*/React.createElement(\"h6\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"Please set your Date of Birth to proceed.\")), /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, \"Date of birth\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(DatePicker, {\n      value: this.state.dob,\n      onChange: this.selectUserDOB,\n      format: 'y-MM-dd',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: 'updateBtn',\n      color: \"primary\",\n      onClick: this.updateUserProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, \"Update\"))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    error: state.UserProfile.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetUserProfile: userToken => dispatch(actions.getUserProfile(userToken)),\n    onUpdateUserProfile: userProfileData => dispatch(actions.updateUserProfile(userProfileData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/UserProfile/UserProfile.js"],"names":["React","Component","Button","Col","Row","Form","FormGroup","Label","connect","actions","dateformat","DatePicker","UserProfile","constructor","props","selectUserDOB","dob","setState","updateUserProfile","state","userProfile","onUpdateUserProfile","uid","token","Date","name","gender","bloodgrp","Address","email","error","componentDidMount","id","dateofbirth","sessionStorage","getItem","render","todayDate","mapStateToProps","mapDispatchToProps","dispatch","onGetUserProfile","userToken","getUserProfile","userProfileData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Button, Col, Row, Form, FormGroup, Label } from \"reactstrap\";\nimport \"./UserProfile.scss\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\nimport dateformat from 'dateformat';\nimport DatePicker from 'react-date-picker';\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userProfile: {\n        uid: null,\n        token: null,\n        dob: new Date(),\n        name: null,\n        gender: null,\n        bloodgrp: null,\n        Address: null,\n        email: null\n      },\n      dob: new Date(),\n      error: null\n    };\n  };\n  \n  componentDidMount() {\n    this.state.userProfile = {\n      uid: this.props.userProfile.id,\n      dob: this.props.userProfile.dateofbirth,\n      token: sessionStorage.getItem('token')\n    };\n  }\n  \n  selectUserDOB = (dob) => {\n    this.setState({dob});\n  };\n  \n  updateUserProfile = () => {\n    this.state.userProfile.dob = dateformat(this.state.dob, 'yyyy-mm-dd');\n    this.props.onUpdateUserProfile(this.state.userProfile);\n  };\n  \n  render() {\n    let todayDate = dateformat(new Date(), 'yyyy-mm-dd');\n    return (\n      <Row>\n        <Col md=\"12\">\n          <div className={'profileUpdateContainer'}>\n            {this.props.error !== null &&\n              <strong>{this.props.error}<br/><br/></strong>\n            }\n            <h6>\n              <strong>Please set your Date of Birth to proceed.</strong>\n            </h6>\n            <Form>\n              <FormGroup>\n                <Label>Date of birth</Label><br/>\n                <DatePicker value={this.state.dob} onChange={this.selectUserDOB} format={'y-MM-dd'}/>\n                <Button className={'updateBtn'} color=\"primary\" onClick={this.updateUserProfile}>Update</Button>\n              </FormGroup>\n            </Form>\n          </div>\n        </Col>\n      </Row>\n    );\n  };\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    error: state.UserProfile.error\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetUserProfile: (userToken) => dispatch(actions.getUserProfile(userToken)),\n    onUpdateUserProfile: (userProfileData) => dispatch(actions.updateUserProfile(userProfileData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);\n"]},"metadata":{},"sourceType":"module"}