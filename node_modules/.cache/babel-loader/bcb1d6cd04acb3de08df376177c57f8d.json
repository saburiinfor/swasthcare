{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  appointmentData: {\n    city: null,\n    appointmentType: null,\n    phyId: null\n  },\n  cityList: [],\n  appointmentTypeList: []\n};\n\nconst appointmentDataSuccess = (state, action) => {\n  return updateObject(state, {\n    appointmentData: action.appointmentData\n  });\n};\n\nconst appointmentTypeSuccess = (state, action) => {\n  return updateObject(state, {\n    appointmentTypeList: action.appointmentTypeList\n  });\n};\n\nconst citiesSuccess = (state, action) => {\n  return updateObject(state, {\n    cityList: action.cityList\n  });\n};\n\nconst getAppointmentDataSuccess = (state, action) => {\n  return state;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_APPOINTMENTDATA:\n      return appointmentDataSuccess(state, action);\n\n    case actionTypes.APPOINTMENTTYPE_SUCCESS:\n      return appointmentTypeSuccess(state, action);\n\n    case actionTypes.CITY_SUCCESS:\n      return citiesSuccess(state, action);\n\n    case actionTypes.GET_APPOINTMENT_DATA:\n      return getAppointmentDataSuccess(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/store/reducers/newAppointment.js"],"names":["actionTypes","updateObject","initialState","appointmentData","city","appointmentType","phyId","cityList","appointmentTypeList","appointmentDataSuccess","state","action","appointmentTypeSuccess","citiesSuccess","getAppointmentDataSuccess","reducer","type","SET_APPOINTMENTDATA","APPOINTMENTTYPE_SUCCESS","CITY_SUCCESS","GET_APPOINTMENT_DATA"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,eAAe,EAAE;AACfC,IAAAA,IAAI,EAAE,IADS;AAEfC,IAAAA,eAAe,EAAE,IAFF;AAGfC,IAAAA,KAAK,EAAE;AAHQ,GADE;AAMnBC,EAAAA,QAAQ,EAAE,EANS;AAOnBC,EAAAA,mBAAmB,EAAE;AAPF,CAArB;;AAUA,MAAMC,sBAAsB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAChD,SAAOV,YAAY,CAACS,KAAD,EAAQ;AACzBP,IAAAA,eAAe,EAAEQ,MAAM,CAACR;AADC,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMS,sBAAsB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAChD,SAAOV,YAAY,CAACS,KAAD,EAAQ;AACzBF,IAAAA,mBAAmB,EAAEG,MAAM,CAACH;AADH,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMK,aAAa,GAAG,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACvC,SAAOV,YAAY,CAACS,KAAD,EAAQ;AACzBH,IAAAA,QAAQ,EAAEI,MAAM,CAACJ;AADQ,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMO,yBAAyB,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACnD,SAAOD,KAAP;AACD,CAFD;;AAIA,MAAMK,OAAO,GAAG,CAACL,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACK,IAAf;AACE,SAAKhB,WAAW,CAACiB,mBAAjB;AACE,aAAOR,sBAAsB,CAACC,KAAD,EAAQC,MAAR,CAA7B;;AACF,SAAKX,WAAW,CAACkB,uBAAjB;AACE,aAAON,sBAAsB,CAACF,KAAD,EAAQC,MAAR,CAA7B;;AACF,SAAKX,WAAW,CAACmB,YAAjB;AACE,aAAON,aAAa,CAACH,KAAD,EAAQC,MAAR,CAApB;;AACF,SAAKX,WAAW,CAACoB,oBAAjB;AACE,aAAON,yBAAyB,CAACJ,KAAD,EAAQC,MAAR,CAAhC;;AACF;AACE,aAAOD,KAAP;AAVJ;AAYD,CAbD;;AAcA,eAAeK,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n  appointmentData: {\n    city: null,\n    appointmentType: null,\n    phyId: null\n  },\n  cityList: [],\n  appointmentTypeList: []\n};\n\nconst appointmentDataSuccess = (state, action) => {\n  return updateObject(state, {\n    appointmentData: action.appointmentData\n  });\n};\n\nconst appointmentTypeSuccess = (state, action) => {\n  return updateObject(state, {\n    appointmentTypeList: action.appointmentTypeList\n  });\n};\n\nconst citiesSuccess = (state, action) => {\n  return updateObject(state, {\n    cityList: action.cityList\n  });\n};\n\nconst getAppointmentDataSuccess = (state, action) => {\n  return state;\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SET_APPOINTMENTDATA:\n      return appointmentDataSuccess(state, action);\n    case actionTypes.APPOINTMENTTYPE_SUCCESS:\n      return appointmentTypeSuccess(state, action);\n    case actionTypes.CITY_SUCCESS:\n      return citiesSuccess(state, action);\n    case actionTypes.GET_APPOINTMENT_DATA:\n      return getAppointmentDataSuccess(state, action);\n    default:\n      return state;\n  }\n};\nexport default reducer;"]},"metadata":{},"sourceType":"module"}