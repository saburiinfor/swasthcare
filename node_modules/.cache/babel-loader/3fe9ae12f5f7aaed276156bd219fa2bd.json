{"ast":null,"code":"import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\n\nclass SelectSlot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slotId: null\n    };\n  }\n\n  componentDidMount() {\n    let {\n      phyId,\n      clinicId,\n      appointmentDate\n    } = this.props.appointmentData;\n    this.props.onGetSlots(phyId, clinicId, appointmentDate);\n  }\n\n  render() {\n    return 'Slots available';\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\n    appointmentData: state.newAppointment.appointmentData,\n    slots: state.selectSlot.slots\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetSlots: (phyId, clinicId, slotDate) => dispatch(actions.getSlots(phyId, clinicId, slotDate)),\n    onSetAppointmentData: appointmentData => dispatch(actions.setAppointmentData(appointmentData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSlot);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/SelectSlot/SelectSlot.js"],"names":["React","Component","connect","actions","SelectSlot","constructor","props","state","slotId","componentDidMount","phyId","clinicId","appointmentDate","appointmentData","onGetSlots","render","mapStateToProps","userProfile","UserProfile","profileCompliant","dateofbirth","newAppointment","slots","selectSlot","mapDispatchToProps","dispatch","slotDate","getSlots","onSetAppointmentData","setAppointmentData"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,qBAAzB;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI;AAACC,MAAAA,KAAD;AAAQC,MAAAA,QAAR;AAAkBC,MAAAA;AAAlB,QAAqC,KAAKN,KAAL,CAAWO,eAApD;AACA,SAAKP,KAAL,CAAWQ,UAAX,CAAsBJ,KAAtB,EAA6BC,QAA7B,EAAuCC,eAAvC;AACD;;AAEDG,EAAAA,MAAM,GAAG;AACP,WACE,iBADF;AAGD;;AAjBgC;;AAoBnC,MAAMC,eAAe,GAAIT,KAAD,IAAW;AACjC,SAAO;AACLU,IAAAA,WAAW,EAAEV,KAAK,CAACW,WAAN,CAAkBD,WAD1B;AAELE,IAAAA,gBAAgB,EAAEZ,KAAK,CAACW,WAAN,CAAkBD,WAAlB,CAA8BG,WAA9B,KAA8C,YAF3D;AAGLP,IAAAA,eAAe,EAAEN,KAAK,CAACc,cAAN,CAAqBR,eAHjC;AAILS,IAAAA,KAAK,EAAEf,KAAK,CAACgB,UAAN,CAAiBD;AAJnB,GAAP;AAMD,CAPD;;AASA,MAAME,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLX,IAAAA,UAAU,EAAE,CAACJ,KAAD,EAAQC,QAAR,EAAkBe,QAAlB,KAA+BD,QAAQ,CAACtB,OAAO,CAACwB,QAAR,CAAiBjB,KAAjB,EAAwBC,QAAxB,EAAkCe,QAAlC,CAAD,CAD9C;AAELE,IAAAA,oBAAoB,EAAGf,eAAD,IAAqBY,QAAQ,CAACtB,OAAO,CAAC0B,kBAAR,CAA2BhB,eAA3B,CAAD;AAF9C,GAAP;AAID,CALD;;AAOA,eAAeX,OAAO,CAACc,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CpB,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../store/actions\";\n\nclass SelectSlot extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      slotId: null\n    };\n  }\n  \n  componentDidMount() {\n    let {phyId, clinicId, appointmentDate} = this.props.appointmentData;\n    this.props.onGetSlots(phyId, clinicId, appointmentDate);\n  }\n  \n  render() {\n    return (\n      'Slots available'\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\n    appointmentData: state.newAppointment.appointmentData,\n    slots: state.selectSlot.slots\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetSlots: (phyId, clinicId, slotDate) => dispatch(actions.getSlots(phyId, clinicId, slotDate)),\n    onSetAppointmentData: (appointmentData) => dispatch(actions.setAppointmentData(appointmentData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectSlot);"]},"metadata":{},"sourceType":"module"}