{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/NewApointment/NewApointment.js\";\nimport React, { Component } from \"react\";\nimport { Col, CustomInput, Input, Row } from \"reactstrap\";\nimport MediaElementGroup from \"../../components/Common/Media/MediaElementGroup\";\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\nimport { Helmet } from 'react-helmet';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../store/actions/index\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\nimport UserProfile from \"../UserProfile/UserProfile\";\nimport styles from \"../SelectAppointmentDate/SelectAppointmentDate.module.scss\";\nimport WizardButtons from \"../../components/Common/WizardButtons/WizardButtons\";\n\nfunction CityOptions(cityList) {\n  let activeCities = cityList.filter(city => city.status === \"Active\");\n  let optList = activeCities.map(item => /*#__PURE__*/React.createElement(\"option\", {\n    key: item.id,\n    value: item.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 44\n    }\n  }, item.name));\n  return optList;\n}\n\nclass NewApointment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityList: [],\n      appointmentTypeList: [],\n      appointmentData: {\n        city: null,\n        appointmentType: null\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetUserProfile(sessionStorage.getItem('token'));\n    this.props.onGetCities();\n    this.props.onGetAppointmentTypeList(); // this.props.onGetPhysicianList();\n  }\n\n  render() {\n    if (this.props.userProfile.success === 0) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 14\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"mt10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, '.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} ')), this.props.profileCompliant === false && /*#__PURE__*/React.createElement(UserProfile, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"New appointment\"), /*#__PURE__*/React.createElement(Breadcrumb, {\n      activeStep: '1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.selectDate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 19\n      }\n    }, \"Select the appointment type and city\", /*#__PURE__*/React.createElement(WizardButtons, {\n      activeStep: '1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, '.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} .header .logo img{height:80px} ')), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, \"City\"), /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }\n    }, \"Select city\"), /*#__PURE__*/React.createElement(CityOptions, {\n      cityList: this.props.cityList.cityList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 27\n      }\n    })))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 32\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }\n    }, \"Appointment type\")))))))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ImgWithOverlayTextGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    cityList: state.newAppointment.cityList,\n    appointmentTypeList: state.newAppointment.appointmentTypeList,\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00'\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetUserProfile: userToken => dispatch(actions.getUserProfile(userToken)),\n    onGetCities: () => dispatch(actions.getCities()),\n    onGetAppointmentTypeList: () => dispatch(actions.getAppointmentTypeList()),\n    onSetAppointmentData: appointmentData => dispatch(actions.setAppointmentData(appointmentData))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NewApointment);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/NewApointment/NewApointment.js"],"names":["React","Component","Col","CustomInput","Input","Row","MediaElementGroup","ImgWithOverlayTextGroup","Helmet","Link","Redirect","connect","actions","Breadcrumb","UserProfile","styles","WizardButtons","CityOptions","cityList","activeCities","filter","city","status","optList","map","item","id","name","NewApointment","constructor","props","state","appointmentTypeList","appointmentData","appointmentType","componentDidMount","onGetUserProfile","sessionStorage","getItem","onGetCities","onGetAppointmentTypeList","render","userProfile","success","profileCompliant","selectDate","mapStateToProps","newAppointment","dateofbirth","mapDispatchToProps","dispatch","userToken","getUserProfile","getCities","getAppointmentTypeList","onSetAppointmentData","setAppointmentData"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,GAAR,EAAaC,WAAb,EAA0BC,KAA1B,EAAiCC,GAAjC,QAA2C,YAA3C;AACA,OAAOC,iBAAP,MAA8B,iDAA9B;AACA,OAAOC,uBAAP,MAAoC,+CAApC;AACA,SAAQC,MAAR,QAAqB,cAArB;AACA,SAAQC,IAAR,EAAcC,QAAd,QAA6B,kBAA7B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,OAAOC,UAAP,MAAuB,+CAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,MAAP,MAAmB,4DAAnB;AACA,OAAOC,aAAP,MAA0B,qDAA1B;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B,MAAIC,YAAY,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,IAAI,IAAIA,IAAI,CAACC,MAAL,KAAgB,QAAxC,CAAnB;AACA,MAAIC,OAAO,GAAGJ,YAAY,CAACK,GAAb,CAAkBC,IAAD,iBAAU;AAAQ,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAlB;AAAsB,IAAA,KAAK,EAAED,IAAI,CAACC,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCD,IAAI,CAACE,IAA5C,CAA3B,CAAd;AACA,SAAOJ,OAAP;AACD;;AAED,MAAMK,aAAN,SAA4B3B,SAA5B,CAAsC;AACpC4B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXb,MAAAA,QAAQ,EAAE,EADC;AAEXc,MAAAA,mBAAmB,EAAE,EAFV;AAGXC,MAAAA,eAAe,EAAE;AACfZ,QAAAA,IAAI,EAAE,IADS;AAEfa,QAAAA,eAAe,EAAE;AAFF;AAHN,KAAb;AAQD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,KAAL,CAAWM,gBAAX,CAA4BC,cAAc,CAACC,OAAf,CAAuB,OAAvB,CAA5B;AACA,SAAKR,KAAL,CAAWS,WAAX;AACA,SAAKT,KAAL,CAAWU,wBAAX,GAHkB,CAIlB;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKX,KAAL,CAAWY,WAAX,CAAuBC,OAAvB,KAAmC,CAAvC,EAA0C;AACxC,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,GAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,wBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,SAAS,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,+JAAR,CADF,CADF,EAII,KAAKb,KAAL,CAAWc,gBAAX,KAAgC,KAAhC,iBACA,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAOE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAE,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE7B,MAAM,CAAC8B,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4DAEE,oBAAC,aAAD;AAAe,MAAA,UAAU,EAAE,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAQ,8LAAR,CADF,CALF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWZ,QAAX,CAAoBA,QAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,CADF,CADF,eASQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATR,eASa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATb,eAUE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF,CAVF,CARF,CADF,CADF,CALF,CADF,eAsCE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAtCF,CAPF,CADF;AAqDD;;AA7EmC;;AAgFtC,MAAM4B,eAAe,GAAIf,KAAD,IAAW;AACjC,SAAO;AACLb,IAAAA,QAAQ,EAAEa,KAAK,CAACgB,cAAN,CAAqB7B,QAD1B;AAELc,IAAAA,mBAAmB,EAAED,KAAK,CAACgB,cAAN,CAAqBf,mBAFrC;AAGLU,IAAAA,WAAW,EAAEX,KAAK,CAACjB,WAAN,CAAkB4B,WAH1B;AAILE,IAAAA,gBAAgB,EAAEb,KAAK,CAACjB,WAAN,CAAkB4B,WAAlB,CAA8BM,WAA9B,KAA8C;AAJ3D,GAAP;AAMD,CAPD;;AASA,MAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvC,SAAO;AACLd,IAAAA,gBAAgB,EAAGe,SAAD,IAAeD,QAAQ,CAACtC,OAAO,CAACwC,cAAR,CAAuBD,SAAvB,CAAD,CADpC;AAELZ,IAAAA,WAAW,EAAE,MAAMW,QAAQ,CAACtC,OAAO,CAACyC,SAAR,EAAD,CAFtB;AAGLb,IAAAA,wBAAwB,EAAE,MAAMU,QAAQ,CAACtC,OAAO,CAAC0C,sBAAR,EAAD,CAHnC;AAILC,IAAAA,oBAAoB,EAAGtB,eAAD,IAAqBiB,QAAQ,CAACtC,OAAO,CAAC4C,kBAAR,CAA2BvB,eAA3B,CAAD;AAJ9C,GAAP;AAMD,CAPD;;AASA,eAAetB,OAAO,CAACmC,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,aAA7C,CAAf","sourcesContent":["import React, {Component} from \"react\";\r\nimport {Col, CustomInput, Input, Row} from \"reactstrap\";\r\nimport MediaElementGroup from \"../../components/Common/Media/MediaElementGroup\";\r\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\r\nimport {Helmet} from 'react-helmet';\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport { connect } from 'react-redux';\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\r\nimport UserProfile from \"../UserProfile/UserProfile\";\r\nimport styles from \"../SelectAppointmentDate/SelectAppointmentDate.module.scss\";\r\nimport WizardButtons from \"../../components/Common/WizardButtons/WizardButtons\";\r\n\r\nfunction CityOptions(cityList) {\r\n  let activeCities = cityList.filter(city => city.status === \"Active\");\r\n  let optList = activeCities.map((item) => <option key={item.id} value={item.id}>{item.name}</option> );\r\n  return optList;\r\n}\r\n\r\nclass NewApointment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      cityList: [],\r\n      appointmentTypeList: [],\r\n      appointmentData: {\r\n        city: null,\r\n        appointmentType: null\r\n      }\r\n    };\r\n  }\r\n  \r\n  componentDidMount() {\r\n    this.props.onGetUserProfile(sessionStorage.getItem('token'));\r\n    this.props.onGetCities();\r\n    this.props.onGetAppointmentTypeList();\r\n    // this.props.onGetPhysicianList();\r\n  }\r\n  \r\n  render() {\r\n    if (this.props.userProfile.success === 0) {\r\n      return <Redirect to='/'/>;\r\n    }\r\n    return (\r\n      <Col md=\"12\" className=\"mt10\">\r\n        <Helmet>\r\n          <style>{'.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} '}</style>\r\n        </Helmet>\r\n        { this.props.profileCompliant === false &&\r\n          <UserProfile/>\r\n        }\r\n        <Row>\r\n          <Col md=\"8\">\r\n            <div>\r\n              <h2>New appointment</h2>\r\n              <Breadcrumb activeStep={'1'} />\r\n            </div>\r\n            <Row>\r\n              <Col>\r\n                <div className={styles.selectDate}>\r\n                  <h4>\r\n                    Select the appointment type and city\r\n                    <WizardButtons activeStep={'1'} />\r\n                  </h4>\r\n                  <Helmet>\r\n                    <style>{'.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} .header .logo img{height:80px} '}</style>\r\n                  </Helmet>\r\n                  <div>\r\n                    <Row>\r\n                      <Col>\r\n                        <h5>City</h5>\r\n                        <select>\r\n                          <option>Select city</option>\r\n                          <CityOptions cityList={this.props.cityList.cityList}/>\r\n                        </select>\r\n                      </Col>\r\n                    </Row><br/><br/>\r\n                    <Row>\r\n                      <Col>\r\n                        <h5>Appointment type</h5>\r\n                        \r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n          \r\n          <Col md=\"4\">\r\n            <ImgWithOverlayTextGroup/>\r\n          </Col>\r\n        </Row>\r\n      </Col>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cityList: state.newAppointment.cityList,\r\n    appointmentTypeList: state.newAppointment.appointmentTypeList,\r\n    userProfile: state.UserProfile.userProfile,\r\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00'\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onGetUserProfile: (userToken) => dispatch(actions.getUserProfile(userToken)),\r\n    onGetCities: () => dispatch(actions.getCities()),\r\n    onGetAppointmentTypeList: () => dispatch(actions.getAppointmentTypeList()),\r\n    onSetAppointmentData: (appointmentData) => dispatch(actions.setAppointmentData(appointmentData))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewApointment);"]},"metadata":{},"sourceType":"module"}