{"ast":null,"code":"import * as actionTypes from '../actions/actionTypes';\nimport { updateObject } from '../../shared/utility';\nconst initialState = {\n  appId: '',\n  error: null\n};\n\nconst submitAppointmentSuccess = (state, action) => {\n  return updateObject(state, {\n    appId: action.appId\n  });\n};\n\nconst submitAppointmentFailure = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SUBMIT_APPOINTMENT_SUCCESS:\n      return submitAppointmentSuccess(state, action);\n\n    case actionTypes.SUBMIT_APPOINTMENT_FAILURE:\n      return submitAppointmentFailure(state, action);\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/store/reducers/submitAppointment.js"],"names":["actionTypes","updateObject","initialState","appId","error","submitAppointmentSuccess","state","action","submitAppointmentFailure","reducer","type","SUBMIT_APPOINTMENT_SUCCESS","SUBMIT_APPOINTMENT_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,wBAA7B;AACA,SAAQC,YAAR,QAA2B,sBAA3B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,KAAK,EAAE;AAFY,CAArB;;AAKA,MAAMC,wBAAwB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAClD,SAAON,YAAY,CAACK,KAAD,EAAQ;AACzBH,IAAAA,KAAK,EAAEI,MAAM,CAACJ;AADW,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMK,wBAAwB,GAAG,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAClD,SAAON,YAAY,CAACK,KAAD,EAAQ;AACzBF,IAAAA,KAAK,EAAEG,MAAM,CAACH;AADW,GAAR,CAAnB;AAGD,CAJD;;AAMA,MAAMK,OAAO,GAAG,CAACH,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAChD,UAAQA,MAAM,CAACG,IAAf;AACE,SAAKV,WAAW,CAACW,0BAAjB;AACE,aAAON,wBAAwB,CAACC,KAAD,EAAQC,MAAR,CAA/B;;AACF,SAAKP,WAAW,CAACY,0BAAjB;AACE,aAAOJ,wBAAwB,CAACF,KAAD,EAAQC,MAAR,CAA/B;;AACF;AACE,aAAOD,KAAP;AANJ;AAQD,CATD;;AAUA,eAAeG,OAAf","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\nimport {updateObject} from '../../shared/utility';\n\nconst initialState = {\n  appId: '',\n  error: null\n};\n\nconst submitAppointmentSuccess = (state, action) => {\n  return updateObject(state, {\n    appId: action.appId\n  });\n};\n\nconst submitAppointmentFailure = (state, action) => {\n  return updateObject(state, {\n    error: action.error\n  })\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.SUBMIT_APPOINTMENT_SUCCESS:\n      return submitAppointmentSuccess(state, action);\n    case actionTypes.SUBMIT_APPOINTMENT_FAILURE:\n      return submitAppointmentFailure(state, action);\n    default:\n      return state;\n  }\n};\nexport default reducer;"]},"metadata":{},"sourceType":"module"}