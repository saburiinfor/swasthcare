{"ast":null,"code":"var _jsxFileName = \"/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/SelectPhysician/SelectPhysician.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row } from \"reactstrap\";\nimport MediaElementGroup from \"../../components/Common/Media/MediaElementGroup\";\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\nimport { Helmet } from 'react-helmet';\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../store/actions/index\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\n\nclass SelectPhysician extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      physicianList: []\n    };\n  }\n\n  componentDidMount() {\n    this.props.onGetUserProfile(sessionStorage.getItem('token'));\n    this.props.onGetAppointmentData();\n    this.props.onGetPhysicianList();\n  }\n\n  render() {\n    console.log(this.props.appointmentData); // const phyId = this.props.appointmentData.phyId;\n    // If the user want to logout or token invalidated, take user to Guest page\n\n    if (this.props.userProfile.success === 0) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 14\n        }\n      });\n    } // If user selected the physician then redirect user to next page\n    // if (phyId !== null) {\n    //   return <Redirect to={\"/selectAppointmentDate\"} />;\n    // }\n\n\n    return /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      className: \"mt10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }\n    }, '.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} ')), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"New appointment\"), /*#__PURE__*/React.createElement(Breadcrumb, {\n      activeStep: '2',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(MediaElementGroup, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ImgWithOverlayTextGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    physicianList: state.selectPhysician.physicianList,\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\n    appointmentData: state.newAppointment.appointmentData // For now, leaving it as selectPhysician but would change to new appointment\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onGetUserProfile: userToken => dispatch(actions.getUserProfile(userToken)),\n    onGetAppointmentData: () => dispatch(actions.getAppointmentData()),\n    onSetAppointmentData: appointmentData => dispatch(actions.setAppointmentData(appointmentData)),\n    onGetPhysicianList: (phyname, phycity, physpecialisation) => dispatch(actions.getPhysicianList(phyname, phycity, physpecialisation)),\n    onSelectPhysician: phyid => dispatch(actions.selectPhysician(phyid))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectPhysician);","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/containers/SelectPhysician/SelectPhysician.js"],"names":["React","Component","Col","Row","MediaElementGroup","ImgWithOverlayTextGroup","Helmet","Link","Redirect","connect","actions","Breadcrumb","SelectPhysician","constructor","props","state","physicianList","componentDidMount","onGetUserProfile","sessionStorage","getItem","onGetAppointmentData","onGetPhysicianList","render","console","log","appointmentData","userProfile","success","mapStateToProps","selectPhysician","UserProfile","profileCompliant","dateofbirth","newAppointment","mapDispatchToProps","dispatch","userToken","getUserProfile","getAppointmentData","onSetAppointmentData","setAppointmentData","phyname","phycity","physpecialisation","getPhysicianList","onSelectPhysician","phyid"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\";\nimport {Col, Row} from \"reactstrap\";\nimport MediaElementGroup from \"../../components/Common/Media/MediaElementGroup\";\nimport ImgWithOverlayTextGroup from \"../ImgWithOverlayText/ImgWithOverlayTextGroup\";\nimport {Helmet} from 'react-helmet';\nimport {Link, Redirect} from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../store/actions/index\";\nimport Breadcrumb from \"../../components/Common/Breadcrumb/Breadcrumb\";\n\nclass SelectPhysician extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      physicianList: []\n    };\n  }\n  \n  componentDidMount() {\n    this.props.onGetUserProfile(sessionStorage.getItem('token'));\n    this.props.onGetAppointmentData();\n    this.props.onGetPhysicianList();\n  }\n  \n  render() {\n    console.log(this.props.appointmentData);\n    // const phyId = this.props.appointmentData.phyId;\n    // If the user want to logout or token invalidated, take user to Guest page\n    if (this.props.userProfile.success === 0) {\n      return <Redirect to='/'/>;\n    }\n    // If user selected the physician then redirect user to next page\n    // if (phyId !== null) {\n    //   return <Redirect to={\"/selectAppointmentDate\"} />;\n    // }\n    return (\n      <Col md=\"12\" className=\"mt10\">\n        <Helmet>\n          <style>{'.header .logo h2{color:#333;} .mt10{margin-top:10px;} main{ background: #fff; } .header .search{border:1px solid #ccc} .header{border-bottom:1px solid #666} '}</style>\n        </Helmet>\n        \n        <Row>\n          <Col md=\"8\">\n            <div>\n              <h2>New appointment</h2>\n              <Breadcrumb activeStep={'2'} />\n            </div>\n            <MediaElementGroup {...this.props} />\n          </Col>\n          \n          <Col md=\"4\">\n            <ImgWithOverlayTextGroup/>\n          </Col>\n        </Row>\n      </Col>\n    \n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    physicianList: state.selectPhysician.physicianList,\n    userProfile: state.UserProfile.userProfile,\n    profileCompliant: state.UserProfile.userProfile.dateofbirth !== '0000-00-00',\n    appointmentData: state.newAppointment.appointmentData // For now, leaving it as selectPhysician but would change to new appointment\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onGetUserProfile: (userToken) => dispatch(actions.getUserProfile(userToken)),\n    onGetAppointmentData: () => dispatch(actions.getAppointmentData()),\n    onSetAppointmentData: (appointmentData) => dispatch(actions.setAppointmentData(appointmentData)),\n    onGetPhysicianList: (phyname, phycity, physpecialisation) => dispatch(actions.getPhysicianList(phyname, phycity, physpecialisation)),\n    onSelectPhysician: (phyid) => dispatch(actions.selectPhysician(phyid))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SelectPhysician);"]},"metadata":{},"sourceType":"module"}