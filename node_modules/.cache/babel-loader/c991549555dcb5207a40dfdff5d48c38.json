{"ast":null,"code":"import axios from 'axios';\nimport FormData from 'form-data';\nimport * as actionTypes from './actionTypes'; // SuccessHandler for get appointment cost details api\n\nexport const getAppointmentCostDetailsSuccess = costDetails => {\n  return {\n    type: actionTypes.GET_APPOINTMENT_COST_DETAILS_SUCCESS,\n    costDetails\n  };\n};\nexport const getAppointmentCostDetails = appointmentData => {\n  return dispatch => {\n    const costRequestData = new FormData();\n    costRequestData.append(\"phyId\", appointmentData.phyId);\n    costRequestData.append(\"clinicId\", appointmentData.clinicId);\n    costRequestData.append(\"slotDate\", appointmentData.slotDate); // axios.post(actionTypes.API_URL + \"Physician/getslots/\", slotRequestData).then(\n    //   response => {\n    //     // console.log('inside profile data response inside userProfile');\n    //     // console.log(\"res ***\" + JSON.stringify(response.data));\n    //     let userProfile = response.data;\n    //     dispatch(userDetailsSuccess(userProfile));\n    //   }).catch(err => {\n    //   console.log(err);\n    // });\n\n    let slotsData = {\n      'slotDate': '09/04/2020',\n      'phyId': 21,\n      'clinicid': 21,\n      'slots': [{\n        'id': '001',\n        'startTime': '10:00 AM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'morning',\n        'type': '04'\n      }, {\n        'id': '002',\n        'startTime': '11:00 AM',\n        'waitingTime': '10',\n        'status': 'full',\n        'period': 'morning',\n        'type': '04'\n      }, {\n        'id': '003',\n        'startTime': '12:00 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'before lunch',\n        'type': '01'\n      }, {\n        'id': '004',\n        'startTime': '1:30 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'post lunch',\n        'type': '02'\n      }, {\n        'id': '005',\n        'startTime': '3:00 PM',\n        'waitingTime': '10',\n        'status': 'halted',\n        'period': 'evening',\n        'type': '04'\n      }, {\n        'id': '006',\n        'startTime': '4:00 PM',\n        'waitingTime': '10',\n        'status': 'available',\n        'period': 'evening',\n        'type': '03'\n      }]\n    };\n    dispatch(getSlotsSuccess(slotsData));\n  };\n};","map":{"version":3,"sources":["/Users/lravikiran/SaburiInformatics/swasthcare-project/swasthcare/src/store/actions/appointmentPayment.js"],"names":["axios","FormData","actionTypes","getAppointmentCostDetailsSuccess","costDetails","type","GET_APPOINTMENT_COST_DETAILS_SUCCESS","getAppointmentCostDetails","appointmentData","dispatch","costRequestData","append","phyId","clinicId","slotDate","slotsData","getSlotsSuccess"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B,C,CAEA;;AACA,OAAO,MAAMC,gCAAgC,GAAIC,WAAD,IAAiB;AAC/D,SAAO;AACLC,IAAAA,IAAI,EAAEH,WAAW,CAACI,oCADb;AAELF,IAAAA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,MAAMG,yBAAyB,GAAIC,eAAD,IAAqB;AAC5D,SAAOC,QAAQ,IAAI;AACjB,UAAMC,eAAe,GAAG,IAAIT,QAAJ,EAAxB;AACAS,IAAAA,eAAe,CAACC,MAAhB,CAAuB,OAAvB,EAAgCH,eAAe,CAACI,KAAhD;AACAF,IAAAA,eAAe,CAACC,MAAhB,CAAuB,UAAvB,EAAmCH,eAAe,CAACK,QAAnD;AACAH,IAAAA,eAAe,CAACC,MAAhB,CAAuB,UAAvB,EAAmCH,eAAe,CAACM,QAAnD,EAJiB,CAKjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIC,SAAS,GAAG;AACd,kBAAY,YADE;AAEd,eAAS,EAFK;AAGd,kBAAY,EAHE;AAId,eACE,CACE;AACE,cAAM,KADR;AAEE,qBAAa,UAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OADF,EASE;AACE,cAAM,KADR;AAEE,qBAAa,UAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,MAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OATF,EAiBE;AACE,cAAM,KADR;AAEE,qBAAa,UAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,cALZ;AAME,gBAAQ;AANV,OAjBF,EAyBE;AACE,cAAM,KADR;AAEE,qBAAa,SAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,YALZ;AAME,gBAAQ;AANV,OAzBF,EAiCE;AACE,cAAM,KADR;AAEE,qBAAa,SAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,QAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OAjCF,EAyCE;AACE,cAAM,KADR;AAEE,qBAAa,SAFf;AAGE,uBAAe,IAHjB;AAIE,kBAAU,WAJZ;AAKE,kBAAU,SALZ;AAME,gBAAQ;AANV,OAzCF;AALY,KAAhB;AAwDAN,IAAAA,QAAQ,CAACO,eAAe,CAACD,SAAD,CAAhB,CAAR;AACD,GAvED;AAwED,CAzEM","sourcesContent":["import axios from 'axios';\nimport FormData from 'form-data';\nimport * as actionTypes from './actionTypes';\n\n// SuccessHandler for get appointment cost details api\nexport const getAppointmentCostDetailsSuccess = (costDetails) => {\n  return {\n    type: actionTypes.GET_APPOINTMENT_COST_DETAILS_SUCCESS,\n    costDetails\n  };\n};\n\nexport const getAppointmentCostDetails = (appointmentData) => {\n  return dispatch => {\n    const costRequestData = new FormData();\n    costRequestData.append(\"phyId\", appointmentData.phyId);\n    costRequestData.append(\"clinicId\", appointmentData.clinicId);\n    costRequestData.append(\"slotDate\", appointmentData.slotDate);\n    // axios.post(actionTypes.API_URL + \"Physician/getslots/\", slotRequestData).then(\n    //   response => {\n    //     // console.log('inside profile data response inside userProfile');\n    //     // console.log(\"res ***\" + JSON.stringify(response.data));\n    //     let userProfile = response.data;\n    //     dispatch(userDetailsSuccess(userProfile));\n    //   }).catch(err => {\n    //   console.log(err);\n    // });\n    let slotsData = {\n      'slotDate': '09/04/2020',\n      'phyId': 21,\n      'clinicid': 21,\n      'slots':\n        [\n          {\n            'id': '001',\n            'startTime': '10:00 AM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'morning',\n            'type': '04'\n          },\n          {\n            'id': '002',\n            'startTime': '11:00 AM',\n            'waitingTime': '10',\n            'status': 'full',\n            'period': 'morning',\n            'type': '04'\n          },\n          {\n            'id': '003',\n            'startTime': '12:00 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'before lunch',\n            'type': '01'\n          },\n          {\n            'id': '004',\n            'startTime': '1:30 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'post lunch',\n            'type': '02'\n          },\n          {\n            'id': '005',\n            'startTime': '3:00 PM',\n            'waitingTime': '10',\n            'status': 'halted',\n            'period': 'evening',\n            'type': '04'\n          },\n          {\n            'id': '006',\n            'startTime': '4:00 PM',\n            'waitingTime': '10',\n            'status': 'available',\n            'period': 'evening',\n            'type': '03'\n          }\n        ]\n    };\n    dispatch(getSlotsSuccess(slotsData));\n  };\n};"]},"metadata":{},"sourceType":"module"}